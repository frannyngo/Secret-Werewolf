[{"/Users/francistan/Desktop/secretwerewolf/client/src/index.js":"1","/Users/francistan/Desktop/secretwerewolf/client/src/App.js":"2","/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js":"3","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js":"4","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js":"5","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js":"6","/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js":"7","/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js":"8","/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js":"9","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js":"10","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js":"11","/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js":"12","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js":"13","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js":"14","/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js":"15","/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js":"16","/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js":"17","/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js":"18","/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js":"19","/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js":"20"},{"size":244,"mtime":1629772901259,"results":"21","hashOfConfig":"22"},{"size":3069,"mtime":1630730625469,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1629616759250,"results":"24","hashOfConfig":"22"},{"size":1696,"mtime":1630537343403,"results":"25","hashOfConfig":"22"},{"size":2995,"mtime":1630730764508,"results":"26","hashOfConfig":"22"},{"size":2626,"mtime":1630730716008,"results":"27","hashOfConfig":"22"},{"size":2574,"mtime":1630537378487,"results":"28","hashOfConfig":"22"},{"size":1983,"mtime":1630629081723,"results":"29","hashOfConfig":"22"},{"size":2113,"mtime":1630731184698,"results":"30","hashOfConfig":"22"},{"size":1733,"mtime":1630537419504,"results":"31","hashOfConfig":"22"},{"size":20886,"mtime":1630797846152,"results":"32","hashOfConfig":"22"},{"size":3594,"mtime":1630739451823,"results":"33","hashOfConfig":"22"},{"size":689,"mtime":1630566473705,"results":"34","hashOfConfig":"22"},{"size":1696,"mtime":1630626047757,"results":"35","hashOfConfig":"22"},{"size":2108,"mtime":1630626049699,"results":"36","hashOfConfig":"22"},{"size":2078,"mtime":1630626052342,"results":"37","hashOfConfig":"22"},{"size":640,"mtime":1630625137599,"results":"38","hashOfConfig":"22"},{"size":2148,"mtime":1630738360066,"results":"39","hashOfConfig":"22"},{"size":4461,"mtime":1630958393536,"results":"40","hashOfConfig":"22"},{"size":1876,"mtime":1630722144950,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1i1aqmq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"/Users/francistan/Desktop/secretwerewolf/client/src/index.js",[],["91","92"],"/Users/francistan/Desktop/secretwerewolf/client/src/App.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js",["93"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n\n const AccountDetails = ({ token }) => {\n    const [ userData, setUserData ] = useState();\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        }).then(response => {\n            setUserData(response.data);\n        })\n    }, [])\n    \n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className=\"showpage\">\n            { !userData? <p> Loading data... </p> : \n            <> \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <h1>\n                    {userData.username}\n                </h1>\n                <br/>\n                <br/>\n                <h3>\n                    Games: {userData.total_games || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Wins: {userData.total_wins || \"Insufficient Data\" }\n                </h3> \n                <br/>\n                <h3>\n                    Win%: {(userData.total_wins/userData.total_games * 100).toFixed(1) || \"Insufficient Data\"}\n                </h3>  \n                <br/>\n                <h3>\n                    Kills: {userData.total_kills || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Kills Per Game: {(userData.total_kills/userData.total_games).toFixed(1) || \"Insufficient Data\"}\n                </h3>\n            </> \n            } \n        </div>\n    )\n}\n\nexport default AccountDetails;","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js",["94","95","96","97","98","99"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Home = ({ token, setToken }) => {\n\n    const dropToken = () => {\n        setToken(undefined);\n    };\n    \n    return (\n        <div className='homebody'>\n            <ul>\n                { !token? \n                <>\n                    <Link to='/signin'>\n                        <li class='sigin' data-text='Sign In'>\n                            <a href='#'>\n                                Sign In\n                            </a>\n                        </li>\n                    </Link>\n                    <Link to='/signup'>\n                        <li class='sigup' data-text='Sign Up'>\n                            <a href='#'>\n                                Sign Up\n                            </a>\n                        </li>\n                     </Link>\n                </>\n                    :\n                <>\n                    <Link to='/playnow'>\n                        <li class='plaay' data-text=\"Play\">\n                            <a href='#'>\n                                Play\n                            </a>\n                        </li>\n                    </Link>\n                    <Link to='/listaccounts'>\n                        <li class='ldboard' data-text=\"Leaderboard\">\n                            <a href='#'>\n                                Leaderboard\n                            </a>\n                        </li>\n                    </Link>\n                    <Link to='/accountdetails'>\n                        <li class='maccount' data-text=\"My Account\">\n                            <a href='#'>\n                                My Account\n                            </a>\n                        </li>\n                    </Link>\n                        <li class='signout' data-text=\"Sign Out\" onClick={dropToken}>\n                            <a href='#'>\n                                Sign Out\n                            </a>\n                        </li>                \n                </>\n                }   \n            </ul>\n        </div>  \n    );\n  }\n\nexport default Home;","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js",["100"],"import { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst AccountShow = ({ token }) => {\n    const { id } = useParams();\n    const [ account, setAccount ] = useState();\n\n    useEffect(() => {\n        axios.post(`http://localhost:5000/accounts/${id}`, {\n            account_id: id\n        })\n        .then(response => {\n            setAccount(response.data);\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='showpage'>\n            { !account? <p> Loading data... </p> : \n            <> \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <h1>\n                    {account.username}\n                </h1>\n                <br/>\n                <h3>\n                    Games: {account.total_games || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Wins: {account.total_wins || \"Insufficient Data\" }\n                </h3>\n                <br/> \n                <h3>\n                    Win%: {(account.total_wins/account.total_games * 100).toFixed(1) || \"Insufficient Data\"} \n                </h3>  \n                <br/>\n                <h3>\n                    Kills: {account.total_kills || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Kills Per Round: {(account.total_kills/account.total_games).toFixed(1) || \"Insufficient Data\"}\n                </h3>\n            </> \n            } \n        </div>\n    )\n}\n\nexport default AccountShow;","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js",["101","102","103","104","105","106"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport P1moon from './img/p1moon.png';\nimport P1dead from './img/p1dead.png';\nimport P2moon from './img/p2moon.png';\nimport P2dead from './img/p2dead.png';\nimport P3dead from './img/p3dead.png';\nimport P3moon from './img/p3moon.png';\nimport P4dead from './img/p4dead.png';\nimport P4moon from './img/p4moon.png';\nimport P5moon from './img/p5moon.png';\nimport P5dead from './img/p5dead.png';\nimport P6dead from './img/p6dead.png';\nimport P6moon from './img/p6moon.png';\nimport P1morning from './img/p1morning.png';\nimport P2morning from './img/p2morning.png';\nimport P3morning from './img/p3morning.png';\nimport P4morning from './img/p4morning.png';\nimport P5morning from './img/p5morning.png';\nimport P6morning from './img/p6morning.png';\nimport P1morndead from './img/p1morndead.png';\nimport P2morndead from './img/p2morndead.png';\nimport P3morndead from './img/p3morndead.png';\nimport P4morndead from './img/p4morndead.png';\nimport P5morndead from './img/p5morndead.png';\nimport P6morndead from './img/p6morndead.png';\n\nconst Play = ({ token, inGame, setInGame, setWin, setUserKills, userKills }) => {\n\n    const [ userData, setUserData ] = useState();\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(true);\n    const [ disabled, setDisabled ] = useState(false);\n    const [ playersRemaining, setPlayersRemaining ] = useState(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred']);\n    const [ witch, setWitch ] = useState();\n    const [ alive, setAlive ] = useState(true);\n    const [ consoleLog, setConsoleLog ] = useState();\n    const [ logVotes, setLogVotes ] = useState();\n    const [ p1, setP1 ] = useState({ id: '' }); \n    const [ p2, setP2 ] = useState({ id: '' }); \n    const [ p3, setP3 ] = useState({ id: '' }); \n    const [ p4, setP4 ] = useState({ id: '' }); \n    const [ p5, setP5 ] = useState({ id: '' }); \n    const [ p6, setP6 ] = useState({ id: '' }); \n    const [ isAlert, setIsAlert ] = useState(false);\n\n\n    // console.log(playersRemaining.length)\n\n    const ShowAlert = () => {\n        setIsAlert(true);\n        setTimeout(() => {\n            setIsAlert(false)\n        }, 4000)\n    }   \n\n    let history = useHistory();\n    setWin(null);\n\n    const Select = (e) => {\n\n        const pp1 = document.getElementById('Simon');\n        const pp2 = document.getElementById('Shaemus');\n        const pp3 = document.getElementById('Linda');\n        const pp4 = document.getElementById('Ed');\n        const pp5 = document.getElementById('Dana');\n        const pp6 = document.getElementById('Alfred');\n    \n        setP1(pp1);\n        setP2(pp2);\n        setP3(pp3);\n        setP4(pp4);\n        setP5(pp5);\n        setP6(pp6);\n\n        const selected = e.target.id;\n\n        const cpuVotes = playersRemaining.filter((player) => {\n            return player !== userData.username\n        })\n\n        if ( playersRemaining.length >= 3 ) {\n            if ( morningPhase === true ) { \n                let votes = []; \n                for (let i = 0; i <= cpuVotes.length - 1; i++) {\n                    let random = playersRemaining[Math.floor((Math.random() * playersRemaining.length))];\n                    votes.push(random);\n                    console.log(`random votes: ${random}`);\n                }\n                votes.push(selected);\n                setLogVotes(votes);\n                \n                let highestReoccurence = 1;\n                let counter = 0;\n                let mostVoted = null;\n\n                playersRemaining.forEach((player) => {\n                    let currentVotesCount =  votes.filter((vote) => {\n                        return vote === player\n                        }).length\n                            if (counter < currentVotesCount) {\n                                counter = currentVotesCount \n                                mostVoted = player\n                                highestReoccurence = 1\n                        } \n                            else if (counter === currentVotesCount) {\n                                highestReoccurence += 1\n                            }\n                    })\n\n                    if (highestReoccurence > 1) {\n                        setConsoleLog(`Players are tied for votes, there will be no execution today!`);\n                        ShowAlert();\n                    }\n                    else {\n                        if (mostVoted === userData.username) {\n                            setWin(false);\n                            setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred']);\n                            history.push('/postgame');\n                        } \n                        else {\n                            const hanged = document.getElementById(mostVoted); \n                            hanged.disabled = true;\n                            hanged.value = false;\n                            setConsoleLog(`Player ${mostVoted} has been hanged`);\n                            ShowAlert();\n                            console.log(`Player ${mostVoted} has been hanged`);\n                            setPlayersRemaining(playersRemaining.filter((player) => {\n                                return player !== mostVoted    \n                            }));\n\n                            if (playersRemaining.length === 2) {\n                                setWin(true);\n                                setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                                history.push('/postgame');\n                            };\n                        }\n                    }\n                    \n                setMorningPhase(false);\n                setNightPhase(true);\n            }\n            else if (nightPhase === true) {\n                const eliminate = e.target.id\n                const playerEliminated = document.getElementById(eliminate);\n                const witchProtects = playersRemaining[Math.floor((Math.random() * playersRemaining.length))];\n                const witchalive = document.getElementById(witch);\n\n                if (witchalive.value = true) {\n                    if (eliminate === witchProtects) {\n                        setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                        ShowAlert();\n                    }\n                    else if (eliminate !== witchProtects) {\n                        playerEliminated.disabled = true;\n                        playerEliminated.value = false;\n                        setPlayersRemaining(playersRemaining.filter((player) => {\n                            return player !== eliminate\n                        }));\n                        setUserKills(userKills + 1);\n                        setConsoleLog(`The werewolf eliminated player ${eliminate}`);\n                        ShowAlert()\n\n                        if (playersRemaining.length === 2) {\n                            setWin(true);\n                            setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                            history.push('/postgame');\n                        };\n                    } \n                    else {\n                        alert('somethings wrong with your night-phase, if witch is alive statements');\n                    } \n                }\n                else if (witchalive.value = false) {\n                    playerEliminated.disabled = true;\n                    playerEliminated.value = false;\n                    setPlayersRemaining(playersRemaining.filter((player) => {\n                        return player !== eliminate\n                    }));\n                    setUserKills(userKills + 1);\n                    setConsoleLog(`The werewolf eliminated player ${eliminate}`);\n                    ShowAlert();\n\n                    if (playersRemaining.length === 2) {\n                        setWin(true);\n                        setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                        history.push('/postgame');\n                    };\n                }\n                else {\n                    alert('something wrong with witch alive condition statement');\n                }\n\n                setLogVotes();\n                setMorningPhase(true);\n                setNightPhase(false);\n            }\n            else {\n                alert('Something wrong with phases...');\n            }\n        }\n\n        else if (playersRemaining.length === 2) {\n                setWin(true);\n                setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                history.push('/postgame');\n        }\n        else {\n            alert('Something is wrong with the game..');\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n\n            let healer = Math.floor((Math.random() * playersRemaining.length));\n            setWitch(playersRemaining[healer]);\n\n            setPlayersRemaining([...playersRemaining, response.data.username])\n            setInGame(true);\n\n            setUserKills(0);\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    if ( !userData) {\n        return <p> Loading.... </p>\n    }\n\n    return(\n        <>  \n               {/* { !morningPhase? \n                <div className='phases'>\n                    <h2 className='phase'> \n                        NIGHT-PHASE\n                    </h2>\n                    <h3 className='who'>\n                        Who would you like to eliminate?\n                    </h3>\n                </div>\n                :\n                <div className='phases'>\n                    <h2 className='phase'>\n                        MORNING-PHASE\n                    </h2>\n                    <h3 className=\"who\">\n                        Vote who you would like to \"frame\" as the \"werewolf\"\n                    </h3>\n                </div>\n                } */}\n\n            <div className={`${isAlert? 'alert show' : 'alert hide'}`} id='alert'>\n                <span className='fas fa-exclamation-circle'>\n\n                </span>\n                <span className='msg'>\n                    {consoleLog}\n                </span>\n\n            </div>\n\n            {/* <h5 class='consolee'> {consoleLog} </h5> */}\n            <div className='gamescreen'>\n\n            <div className='gameinfo'>\n                  \n                    <h3 className='player7'\n                        id={userData.username}\n                        > \n                    </h3>\n                    {/* <h3>\n                        Votes:\n                    </h3>\n                  \n                    { logVotes?   \n                    <>  \n                        {logVotes.map(v => (\n                            <p className='vote'>\n                                {v}\n                            </p>            \n                        ))\n                        }   \n                    </>\n                    :\n                    <>\n                        <p>\n                            No votes yet...\n                        </p>\n                    </>\n                    }  */}\n                </div>\n\n                <div className='container'>\n                    <div className='card'>\n                        <div className='image'>\n                            { p1.disabled? \n                                morningPhase? \n                                    <img src={P1morndead} alt='player 1' />\n                                :\n                                    <img src={P1dead} alt='player 1' />\n                            :\n                                morningPhase?\n                                    <img src={P1morning} alt='player 1 morning' />\n                                :\n                                    <img src={P1moon} alt='player 1 dead' /> \n                            }\n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Simon\n                            </h3>\n                            <p>\n                                I've heard that he's currently in med-school, studying to become a doctor. Could pose as a problem in the future..\n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Simon'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                        <div className='image'>\n                            { p2.disabled? \n                                morningPhase?\n                                    <img src={P2morndead} alt='pl' />\n                                :\n                                    <img src={P2dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P2morning} alt='player1' />\n                                :\n                                    <img src={P2moon} alt='player 1 dead' />\n                            }\n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Shaemus\n                            </h3>\n                            <p>\n                                This mans beard is on-point. He has an elegant build and he's always drinking booze and partying at night,\n                                could be easy prey? \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Shaemus'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n                    \n                    <div className='card'>\n                        <div className='image'>\n                            { p3.disabled? \n                                morningPhase?\n                                    <img src={P3morndead} alt='pl' />\n                                :\n                                    <img src={P3dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P3morning} alt='player1' />\n                                :\n                                    <img src={P3moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Linda\n                            </h3>\n                            <p>\n                                She's seems very articulate and well-educated, she also loves to read mystery novels.. She could pose as a problem if i dont eliminate her early. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Linda'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                        <div className='image'>\n                            { p4.disabled? \n                                morningPhase?\n                                    <img src={P5morndead} alt='pl' />\n                                :\n                                    <img src={P5dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P5morning} alt='player1' />\n                                :\n                                    <img src={P5moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Ed\n                            </h3>\n                            <p>\n                                I always see him at the diner in the morning, drinking coffee and eating a bagel. Then he goes out to party with Shaemus at night, they never leave together...\n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Ed'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button> \n                    </div>\n                    \n                    <div className='card'>\n                        <div className='image'>\n                            { p5.disabled? \n                                    morningPhase?\n                                    <img src={P4morndead} alt='pl' />\n                                :\n                                    <img src={P4dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P4morning} alt='player1' />\n                                :\n                                    <img src={P4moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Dana\n                            </h3>\n                            <p>\n                                She is a successful business woman. I've also heard rumors that\n                                she used to be a medic for the army. She could potentially be a first-responder to my victims.. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Dana'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                        <div className='image'>\n                            { p6.disabled? \n                                morningPhase?\n                                    <img src={P6morndead} alt='pl' />\n                                    :\n                                    <img src={P6dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P6morning} alt='player1' />\n                                    :\n                                    <img src={P6moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Alfred\n                            </h3>\n                            <p>\n                                A mysterious retired doctor, not much about him. I rarely ever see him around town. Rumors are, he spends his times hunting animals in the forest \n                                just outside of the town. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Alfred'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                        \n                    </div>\n\n                </div>\n            </div>       \n            \n        </>\n    );\n}\n\n\nexport default Play;","/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js",["107"],"import { Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PostGame = ({ token, win, userKills, setInGame, inGame }) => {\n    \n    const [ userData, setUserData ] = useState({ username: '', \n                                                total_games: 0,\n                                                total_kills: 0,\n                                                total_wins: 0 \n                                            });\n    const game = 1                                        \n    let gameResults = 0\n\n    if (win === true) {\n        gameResults = 1\n    }\n    \n    let newTotalGames = game + userData.total_games;\n    let newTotalWins = gameResults + userData.total_wins;\n    let newTotalKills = userKills + userData.total_kills;\n\n\n    const Continue = () => {\n        axios.put('http://localhost:5000/postgame/me', {\n            token: token,\n            total_games: newTotalGames,\n            total_wins: newTotalWins,\n            total_kills: newTotalKills\n        })\n        .then(response => {\n            console.log(response.data);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n        setInGame(false);\n    }\n    \n\n   useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n    .then(response => {\n        setUserData(response.data);\n    });\n}, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    if (!inGame) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='postgame'>\n            { !userData? <p> Loading data... </p> \n            : \n            <>  \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                {\n                    win?\n                        <h3>\n                            Congratulations {userData.username} you won!\n                        </h3>\n                    :\n                        <h3>\n                            {userData.username}  you got caught!\n                        </h3>\n                }\n                <br/>\n                <h3>\n                    You eliminated {userKills} players! \n                </h3>\n\n                <p>\n                    -----------------------------------------------------------------------------------------\n                </p>\n                <br/>\n                <div className='endgame'>\n                    <h2>\n                        Total Games: &emsp; {userData.total_games || 0 } &emsp; + &emsp; {game} &emsp; = &emsp; {newTotalGames || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Wins: &emsp; {userData.total_wins || 0 } &emsp; + &emsp; {gameResults} &emsp; = &emsp; {newTotalWins || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Kills: &emsp; {userData.total_kills || 0 } &emsp; + &emsp; {userKills} &emsp; = &emsp; {newTotalKills || 0}\n                    </h2>\n                    <p>\n                        &emsp;\n                    </p>\n                    <p>\n                        Your account has been updated..\n                    </p>\n                    <br/>\n                    <button className='btn btn-background-circle'\n                        onClick={Continue}\n                        >\n                        Continue\n                    </button>\n                </div>\n        </>\n        }\n        </div>\n    );\n}\n\nexport default PostGame;","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js",["108"],"import { useEffect, useState } from \"react\";\n\nconst PREFIX = 'secretwerewolf-chat-'\n\nconst useLocalStorage = (key, initialValue) => {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) {\n            return JSON.parse(jsonValue) \n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } \n        else {\n            return initialValue;\n        }\n    });\n\nuseEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n}, [value, setValue])\n\nreturn [value, setValue];\n\n}\n\n\nexport default useLocalStorage;","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js",[],["109","110"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js",["111","112","113","114","115","116"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js",["117"],"import { Redirect, useHistory} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Room = ({ token }) => {\n    const [ userdata, setUserdata ] = useState('');\n    const [ name, setName ] = useState('');\n    const history = useHistory();\n\n    const Submit = (e) => {\n        e.preventDefault();\n        history.push({\n            pathname: '/multiplayer',\n            search: `?query=${name}`,\n            name,\n            username: userdata.username\n        })\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n            .then(response => {\n            setUserdata(response.data);\n    });\n    \n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' /> \n    }\n\n    return (\n        <div>\n            <form className=\"create\" onSubmit={Submit}>\n                <br/>\n                <br/>\n                <h1 className=\"text-center mt-5 text-white\"\n                    > \n                    Select A Room\n                </h1>\n                    <br/>\n                    <br/>\n                    <div>\n                        <label htmlFor='room'>Room Name</label>\n                        <input required\n                            type='text' \n                            name='room' \n                            placeholder='Enter a room name!'\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            >\n                        </input>\n                            <button className=\"btn btn-background-circle\"\n                                type='submit'\n                                >\n                                Join\n                            </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Room;",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":15,"column":8,"nodeType":"124","endLine":15,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":18,"column":29,"nodeType":"128","endLine":18,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":25,"column":29,"nodeType":"128","endLine":25,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":35,"column":29,"nodeType":"128","endLine":35,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":42,"column":29,"nodeType":"128","endLine":42,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":49,"column":29,"nodeType":"128","endLine":49,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":55,"column":29,"nodeType":"128","endLine":55,"endColumn":41},{"ruleId":"122","severity":1,"message":"129","line":17,"column":8,"nodeType":"124","endLine":17,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":34,"column":23,"nodeType":"133","messageId":"134","endLine":34,"endColumn":34},{"ruleId":"131","severity":1,"message":"135","line":37,"column":20,"nodeType":"133","messageId":"134","endLine":37,"endColumn":28},{"ruleId":"131","severity":1,"message":"136","line":39,"column":13,"nodeType":"133","messageId":"134","endLine":39,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":150,"column":21,"nodeType":"139","messageId":"140","endLine":150,"endColumn":44},{"ruleId":"137","severity":1,"message":"138","line":175,"column":26,"nodeType":"139","messageId":"140","endLine":175,"endColumn":50},{"ruleId":"122","severity":1,"message":"141","line":229,"column":8,"nodeType":"124","endLine":229,"endColumn":10,"suggestions":"142"},{"ruleId":"122","severity":1,"message":"123","line":49,"column":4,"nodeType":"124","endLine":49,"endColumn":6,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":22,"column":4,"nodeType":"124","endLine":22,"endColumn":21,"suggestions":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"120","replacedBy":"147"},{"ruleId":"131","severity":1,"message":"148","line":5,"column":5,"nodeType":"133","messageId":"134","endLine":5,"endColumn":11},{"ruleId":"131","severity":1,"message":"149","line":14,"column":24,"nodeType":"133","messageId":"134","endLine":14,"endColumn":36},{"ruleId":"122","severity":1,"message":"150","line":75,"column":4,"nodeType":"124","endLine":75,"endColumn":75,"suggestions":"151"},{"ruleId":"122","severity":1,"message":"152","line":75,"column":25,"nodeType":"153","endLine":75,"endColumn":34},{"ruleId":"122","severity":1,"message":"152","line":75,"column":36,"nodeType":"153","endLine":75,"endColumn":45},{"ruleId":"122","severity":1,"message":"152","line":75,"column":47,"nodeType":"153","endLine":75,"endColumn":51},{"ruleId":"122","severity":1,"message":"123","line":28,"column":8,"nodeType":"124","endLine":28,"endColumn":10,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["157"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["158"],"no-unused-vars","'setDisabled' is assigned a value but never used.","Identifier","unusedVar","'setAlive' is assigned a value but never used.","'logVotes' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has missing dependencies: 'playersRemaining', 'setInGame', 'setUserKills', and 'token'. Either include them or remove the dependency array. If 'setInGame' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],["160"],"React Hook useEffect has a missing dependency: 'prefixedKey'. Either include it or remove the dependency array.",["161"],["155"],["156"],"'socket' is defined but never used.","'setIsPending' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomName' and 'token'. Either include them or remove the dependency array.",["162"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"164","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"164","fix":"175"},"Update the dependencies array to be: [token]",{"range":"176","text":"177"},"Update the dependencies array to be: [id]",{"range":"178","text":"179"},"Update the dependencies array to be: [playersRemaining, setInGame, setUserKills, token]",{"range":"180","text":"181"},{"range":"182","text":"177"},"Update the dependencies array to be: [value, setValue, prefixedKey]",{"range":"183","text":"184"},"Update the dependencies array to be: [ENDPOINT, location, messages, roomName, setMessages, token]",{"range":"185","text":"186"},{"range":"187","text":"177"},[412,414],"[token]",[485,487],"[id]",[9372,9374],"[playersRemaining, setInGame, setUserKills, token]",[1412,1414],[607,624],"[value, setValue, prefixedKey]",[2093,2164],"[ENDPOINT, location, messages, roomName, setMessages, token]",[730,732]]