[{"/Users/francistan/Desktop/secretwerewolf/client/src/index.js":"1","/Users/francistan/Desktop/secretwerewolf/client/src/App.js":"2","/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js":"3","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js":"4","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js":"5","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js":"6","/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js":"7","/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js":"8","/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js":"9","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js":"10","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js":"11","/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js":"12","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js":"13","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js":"14","/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js":"15","/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js":"16","/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js":"17","/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js":"18","/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js":"19","/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js":"20","/Users/francistan/Desktop/secretwerewolf/client/src/components/About.js":"21","/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutMultiplayer.js":"22","/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutSingle.js":"23"},{"size":244,"mtime":1629772901259,"results":"24","hashOfConfig":"25"},{"size":3519,"mtime":1631145337598,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1629616759250,"results":"27","hashOfConfig":"25"},{"size":3831,"mtime":1631144341342,"results":"28","hashOfConfig":"25"},{"size":2995,"mtime":1630730764508,"results":"29","hashOfConfig":"25"},{"size":2626,"mtime":1630730716008,"results":"30","hashOfConfig":"25"},{"size":4404,"mtime":1630990156246,"results":"31","hashOfConfig":"25"},{"size":2142,"mtime":1631132094032,"results":"32","hashOfConfig":"25"},{"size":2480,"mtime":1631132031036,"results":"33","hashOfConfig":"25"},{"size":1733,"mtime":1630537419504,"results":"34","hashOfConfig":"25"},{"size":22940,"mtime":1631075803729,"results":"35","hashOfConfig":"25"},{"size":3594,"mtime":1630739451823,"results":"36","hashOfConfig":"25"},{"size":689,"mtime":1630566473705,"results":"37","hashOfConfig":"25"},{"size":1696,"mtime":1630626047757,"results":"38","hashOfConfig":"25"},{"size":2108,"mtime":1630626049699,"results":"39","hashOfConfig":"25"},{"size":2078,"mtime":1630626052342,"results":"40","hashOfConfig":"25"},{"size":640,"mtime":1630625137599,"results":"41","hashOfConfig":"25"},{"size":2189,"mtime":1630993706607,"results":"42","hashOfConfig":"25"},{"size":5942,"mtime":1631089330917,"results":"43","hashOfConfig":"25"},{"size":1876,"mtime":1630722144950,"results":"44","hashOfConfig":"25"},{"size":2943,"mtime":1631147203709,"results":"45","hashOfConfig":"25"},{"size":2844,"mtime":1631147188648,"results":"46","hashOfConfig":"25"},{"size":3019,"mtime":1631147120278,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1i1aqmq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/francistan/Desktop/secretwerewolf/client/src/index.js",[],["103","104"],"/Users/francistan/Desktop/secretwerewolf/client/src/App.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js",["105"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js",["106"],"import React, { useEffect, useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst AccountShowList = ({ token }) => {\n\n    const [accounts, setAccounts] = useState([]);\n\n    const getAccounts = async() => {\n        try {\n            const response = await fetch('http://localhost:5000/leaderboard');\n            const jsonData = await response.json();\n\n            setAccounts(jsonData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const Redirect = (e) => {\n        e.preventDefault()\n        const gettingAccounts = async() => {\n            try {\n                const response = await fetch('http://localhost:5000/leaderboard');\n                const jsonData = await response.json();\n    \n                setAccounts(jsonData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        gettingAccounts();\n    };\n\n    const KillList= (e) => {\n        e.preventDefault()\n        const SubmitKills = async() => {\n                try {\n                    const response = await fetch('http://localhost:5000/leaderboard/kills');\n                    const jsonData = await response.json();\n        \n                    setAccounts(jsonData);\n                } catch (error) {\n                    console.log(error);\n                }\n        };\n        SubmitKills();\n    };\n\n    const GameList= (e) => {\n        e.preventDefault()\n        const SubmitGames = async() => {\n            try {\n                const response = await fetch('http://localhost:5000/leaderboard/games');\n                const jsonData = await response.json();\n\n                setAccounts(jsonData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        SubmitGames();\n    };\n\n    useEffect(() => {\n        getAccounts();\n    }, []);\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n    <div className='leaderboardPage'>\n        <div className='leaderboardButtons'>\n            <button className=\"btn btn-background-circle\"\n                onClick={Redirect}\n                >\n                Wins \n            </button>\n            &nbsp;&nbsp;\n            <button className=\"btn btn-background-circle\"\n                onClick={KillList}\n                >\n                Kills\n            </button>\n            &nbsp;&nbsp;\n            <button className=\"btn btn-background-circle\"\n                onClick={GameList}\n                >\n                Games\n            </button>\n        </div>\n\n        <div className=\"leaderboards\">\n            <th> \n                Username:\n            </th>\n            <th>\n                Games:\n            </th>\n            <th>\n                Wins:\n            </th>\n            <th>\n                Win%:\n            </th>\n            <th>\n                Kills:\n            </th>\n            <th>\n                Kills/Round:\n            </th>\n            <tbody>\n                {accounts.map(account => (\n                <tr className=\"leaderboard-accounts\" \n                    key={account.account_id}\n                    >\n                    <td> \n                        <Link to={`/accounts/${account.account_id}`}>\n                            <p>\n                                {account.username} \n                            </p> \n                        </Link>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_games}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_wins}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {(account.total_wins/account.total_games * 100).toFixed(1)}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_kills}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {(account.total_kills/account.total_games).toFixed(1)}\n                        </p>\n                    </td>\n                </tr> \n                ))\n                }\n            </tbody>\n        </div>\n    </div>\n    );\n}\n\n\nexport default AccountShowList;","/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js",["107","108","109","110","111","112","113"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js",["114"],"import { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst AccountShow = ({ token }) => {\n    const { id } = useParams();\n    const [ account, setAccount ] = useState();\n\n    useEffect(() => {\n        axios.post(`http://localhost:5000/accounts/${id}`, {\n            account_id: id\n        })\n        .then(response => {\n            setAccount(response.data);\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='showpage'>\n            { !account? <p> Loading data... </p> : \n            <> \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <h1>\n                    {account.username}\n                </h1>\n                <br/>\n                <h3>\n                    Games: {account.total_games || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Wins: {account.total_wins || \"Insufficient Data\" }\n                </h3>\n                <br/> \n                <h3>\n                    Win%: {(account.total_wins/account.total_games * 100).toFixed(1) || \"Insufficient Data\"} \n                </h3>  \n                <br/>\n                <h3>\n                    Kills: {account.total_kills || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Kills Per Round: {(account.total_kills/account.total_games).toFixed(1) || \"Insufficient Data\"}\n                </h3>\n            </> \n            } \n        </div>\n    )\n}\n\nexport default AccountShow;","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js",["115","116","117","118","119","120","121","122","123"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport P1moon from './img/p1moon.png';\nimport P1dead from './img/p1dead.png';\nimport P2moon from './img/p2moon.png';\nimport P2dead from './img/p2dead.png';\nimport P3dead from './img/p3dead.png';\nimport P3moon from './img/p3moon.png';\nimport P4dead from './img/p4dead.png';\nimport P4moon from './img/p4moon.png';\nimport P5moon from './img/p5moon.png';\nimport P5dead from './img/p5dead.png';\nimport P6dead from './img/p6dead.png';\nimport P6moon from './img/p6moon.png';\nimport P1morning from './img/p1morning.png';\nimport P2morning from './img/p2morning.png';\nimport P3morning from './img/p3morning.png';\nimport P4morning from './img/p4morning.png';\nimport P5morning from './img/p5morning.png';\nimport P6morning from './img/p6morning.png';\nimport P1morndead from './img/p1morndead.png';\nimport P2morndead from './img/p2morndead.png';\nimport P3morndead from './img/p3morndead.png';\nimport P4morndead from './img/p4morndead.png';\nimport P5morndead from './img/p5morndead.png';\nimport P6morndead from './img/p6morndead.png';\n\nconst Play = ({ token, inGame, setInGame, setWin, setUserKills, userKills }) => {\n\n    const [ userData, setUserData ] = useState();\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(true);\n    const [ disabled, setDisabled ] = useState(false);\n    const [ playersRemaining, setPlayersRemaining ] = useState(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred']);\n    const [ witch, setWitch ] = useState();\n    const [ alive, setAlive ] = useState(true);\n    const [ consoleLog, setConsoleLog ] = useState();\n    const [ logVotes, setLogVotes ] = useState();\n    const [ p1, setP1 ] = useState({ id: '' }); \n    const [ p2, setP2 ] = useState({ id: '' }); \n    const [ p3, setP3 ] = useState({ id: '' }); \n    const [ p4, setP4 ] = useState({ id: '' }); \n    const [ p5, setP5 ] = useState({ id: '' }); \n    const [ p6, setP6 ] = useState({ id: '' }); \n    const [ isAlert, setIsAlert ] = useState(false);\n    const [ vp1, setVP1 ] = useState(0);\n    const [ vp2, setVP2 ] = useState(0);\n    const [ vp3, setVP3 ] = useState(0);\n    const [ vp4, setVP4 ] = useState(0);\n    const [ vp5, setVP5 ] = useState(0);\n    const [ vp6, setVP6 ] = useState(0);\n    const [ vp7, setVP7 ] = useState(0);\n\n    // console.log(playersRemaining.length)\n\n    const ShowAlert = () => {\n        setIsAlert(true);\n        setTimeout(() => {\n            setIsAlert(false)\n        }, 3000)\n    }   \n\n    let history = useHistory();\n    setWin(null);\n    console.log(playersRemaining)\n    const Select = (e) => {\n\n        const pp1 = document.getElementById('Simon');\n        const pp2 = document.getElementById('Shaemus');\n        const pp3 = document.getElementById('Linda');\n        const pp4 = document.getElementById('Ed');\n        const pp5 = document.getElementById('Dana');\n        const pp6 = document.getElementById('Alfred');\n    \n        setP1(pp1);\n        setP2(pp2);\n        setP3(pp3);\n        setP4(pp4);\n        setP5(pp5);\n        setP6(pp6);\n    \n        setVP1(0);\n        setVP2(0);\n        setVP3(0);\n        setVP4(0);\n        setVP5(0);\n        setVP6(0);\n\n        const selected = e.target.id;\n\n        const cpuVotes = playersRemaining.filter((player) => {\n            return player !== userData.username\n        })\n\n        if ( playersRemaining.length >= 3 ) {\n            if ( morningPhase === true ) { \n                let votes = []; \n                for (let i = 0; i <= cpuVotes.length - 1; i++) {\n                    let random = playersRemaining[Math.floor((Math.random() * playersRemaining.length))];\n                    votes.push(random);\n                    \n                    console.log(`v: ${random}`);\n                    // console.log(pp1.id);\n                    // console.log(pp2.id);\n                    // console.log(pp3.id);\n                    // console.log(pp4.id);\n                    // console.log(pp5.id);\n                    // console.log(pp6.id);\n\n                    if (random === pp1.id) {\n                        setVP1(vp1 + 1);\n                    }\n                    else if (random === pp2.id) {\n                        setVP2(vp2 + 1);\n                    }\n                    else if (random === pp3.id) {\n                        setVP3(vp3 + 1);\n                    }\n                    else if (random === pp4.id) {\n                        setVP4(vp4 + 1);\n                    }\n                    else if (random == pp5.id) {\n                        setVP5(vp5 + 1);\n                    }\n                    else if (random === pp6.id) {\n                        setVP6(vp6 + 1);\n                    } \n                    \n                };\n                votes.push(selected);\n                setLogVotes(votes);\n                \n                let highestReoccurence = 1;\n                let counter = 0;\n                let mostVoted = null;\n\n                playersRemaining.forEach((player) => {\n                    let currentVotesCount =  votes.filter((vote) => {\n                        return vote === player\n                        }).length\n                            if (counter < currentVotesCount) {\n                                counter = currentVotesCount \n                                mostVoted = player\n                                highestReoccurence = 1\n                        } \n                            else if (counter === currentVotesCount) {\n                                highestReoccurence += 1\n                            }\n                    })\n\n                    if (highestReoccurence > 1) {\n                        setConsoleLog(`Players are tied for votes, there will be no execution today!`);\n                        ShowAlert();\n                    }\n                    else {\n                        if (mostVoted === userData.username) {\n                            setWin(false);\n                            setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred']);\n                            history.push('/postgame');\n                        } \n                        else {\n                            const hanged = document.getElementById(mostVoted); \n                            hanged.disabled = true;\n                            hanged.value = false;\n                            setConsoleLog(`Player ${mostVoted} has been hanged`);\n                            ShowAlert();\n                            console.log(`Player ${mostVoted} has been hanged`);\n                            setPlayersRemaining(playersRemaining.filter((player) => {\n                                return player !== mostVoted    \n                            }));\n\n                            if (playersRemaining.length === 2) {\n                                setWin(true);\n                                setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                                history.push('/postgame');\n                            };\n                        }\n                    }\n\n                setMorningPhase(false);\n                setNightPhase(true);\n            }\n            else if (nightPhase === true) {\n                const eliminate = e.target.id\n                const playerEliminated = document.getElementById(eliminate);\n                const witchProtects = playersRemaining[Math.floor((Math.random() * playersRemaining.length))];\n                const witchalive = document.getElementById(witch);\n\n                if (witchalive.value = true) {\n                    if (eliminate === witchProtects) {\n                        setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                        ShowAlert();\n                    }\n                    else if (eliminate !== witchProtects) {\n                        playerEliminated.disabled = true;\n                        playerEliminated.value = false;\n                        setPlayersRemaining(playersRemaining.filter((player) => {\n                            return player !== eliminate\n                        }));\n                        setUserKills(userKills + 1);\n                        setConsoleLog(`The werewolf eliminated player ${eliminate}`);\n                        ShowAlert()\n\n                        if (playersRemaining.length === 2) {\n                            setWin(true);\n                            setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                            history.push('/postgame');\n                        };\n                    } \n                    else {\n                        alert('somethings wrong with your night-phase, if witch is alive statements');\n                    } \n                }\n                else if (witchalive.value = false) {\n                    playerEliminated.disabled = true;\n                    playerEliminated.value = false;\n                    setPlayersRemaining(playersRemaining.filter((player) => {\n                        return player !== eliminate\n                    }));\n                    setUserKills(userKills + 1);\n                    setConsoleLog(`The werewolf eliminated player ${eliminate}`);\n                    ShowAlert();\n\n                    if (playersRemaining.length === 2) {\n                        setWin(true);\n                        setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                        history.push('/postgame');\n                    };\n                }\n                else {\n                    alert('something wrong with witch alive condition statement');\n                }\n\n                setLogVotes();\n                setMorningPhase(true);\n                setNightPhase(false);\n            }\n            else {\n                alert('Something wrong with phases...');\n            }\n        }\n\n        else if (playersRemaining.length === 2) {\n                setWin(true);\n                setPlayersRemaining(['Simon', 'Shaemus', 'Linda', 'Ed', 'Dana', 'Alfred'])\n                history.push('/postgame');\n        }\n        else {\n            alert('Something is wrong with the game..');\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n\n            let healer = Math.floor((Math.random() * playersRemaining.length));\n            setWitch(playersRemaining[healer]);\n\n            setPlayersRemaining([...playersRemaining, response.data.username])\n            setInGame(true);\n\n            setUserKills(0);\n\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    if ( !userData) {\n        return <p> Loading.... </p>\n    }\n\n    return(\n        <>  \n               {/* { !morningPhase? \n                <div className='phases'>\n                    <h2 className='phase'> \n                        NIGHT-PHASE\n                    </h2>\n                    <h3 className='who'>\n                        Who would you like to eliminate?\n                    </h3>\n                </div>\n                :\n                <div className='phases'>\n                    <h2 className='phase'>\n                        MORNING-PHASE\n                    </h2>\n                    <h3 className=\"who\">\n                        Vote who you would like to \"frame\" as the \"werewolf\"\n                    </h3>\n                </div>\n                } */}\n\n            <div className={`${isAlert? 'alert show' : 'alert hide'}`} id='alert'>\n                <span className='fas fa-exclamation-circle'>\n\n                </span>\n                <span className='msg'>\n                    {consoleLog}\n                </span>\n\n            </div>\n\n            {/* <h5 class='consolee'> {consoleLog} </h5> */}\n            <div className='gamescreen'>\n\n            <div className='gameinfo'>\n                  \n                    <h3 className='player7'\n                        id={userData.username}\n                        > \n                    </h3>\n                    {/* <h3>\n                        Votes:\n                    </h3>\n                  \n                    { logVotes?   \n                    <>  \n                        {logVotes.map(v => (\n                            <p className='vote'>\n                                {v}\n                            </p>            \n                        ))\n                        }   \n                    </>\n                    :\n                    <>\n                        <p>\n                            No votes yet...\n                        </p>\n                    </>\n                    }  */}\n                </div>\n\n                <div className='container'>\n                    <div className='card'>\n                        <p className='counter'>\n                            {vp1}\n                        </p>\n                        <div className='image'>\n                            { p1.disabled? \n                                morningPhase? \n                                    <img src={P1morndead} alt='player 1' />\n                                :\n                                    <img src={P1dead} alt='player 1' />\n                            :\n                                morningPhase?\n                                    <img src={P1morning} alt='player 1 morning' />\n                                :\n                                    <img src={P1moon} alt='player 1 dead' /> \n                            }\n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Simon\n                            </h3>\n                            <p>\n                                I've heard that he's currently in med-school, studying to become a doctor. Could pose as a problem in the future..\n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Simon'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                        <p className='counter'>\n                            {vp2}\n                        </p>\n                        <div className='image'>\n                            { p2.disabled? \n                                morningPhase?\n                                    <img src={P2morndead} alt='pl' />\n                                :\n                                    <img src={P2dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P2morning} alt='player1' />\n                                :\n                                    <img src={P2moon} alt='player 1 dead' />\n                            }\n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Shaemus\n                            </h3>\n                            <p>\n                                This mans beard is on-point. He has an elegant build and he's always drinking booze and partying at night,\n                                could be easy prey? \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Shaemus'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n                    \n                    <div className='card'>\n                        <p className='counter'>\n                            {vp3}\n                        </p>\n                        <div className='image'>\n                            { p3.disabled? \n                                morningPhase?\n                                    <img src={P3morndead} alt='pl' />\n                                :\n                                    <img src={P3dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P3morning} alt='player1' />\n                                :\n                                    <img src={P3moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Linda\n                            </h3>\n                            <p>\n                                She's seems very articulate and well-educated, she also loves to read mystery novels.. She could pose as a problem if i dont eliminate her early. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Linda'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                        <p className='counter'>\n                            {vp4}\n                        </p>\n                        <div className='image'>\n                            { p4.disabled? \n                                morningPhase?\n                                    <img src={P5morndead} alt='pl' />\n                                :\n                                    <img src={P5dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P5morning} alt='player1' />\n                                :\n                                    <img src={P5moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Ed\n                            </h3>\n                            <p>\n                                I always see him at the diner in the morning, drinking coffee and eating a bagel. Then he goes out to party with Shaemus at night, they never leave together...\n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Ed'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button> \n                    </div>\n                    \n                    <div className='card'>\n                        <p className='counter'>\n                            {vp5}\n                        </p>\n                        <div className='image'>\n                            { p5.disabled? \n                                    morningPhase?\n                                    <img src={P4morndead} alt='pl' />\n                                :\n                                    <img src={P4dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P4morning} alt='player1' />\n                                :\n                                    <img src={P4moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Dana\n                            </h3>\n                            <p>\n                                She is a successful business woman. I've also heard rumors that\n                                she used to be a medic for the army. She could potentially be a first-responder to my victims.. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Dana'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                    </div>\n\n                    <div className='card'>\n                       <p className='counter'>\n                            {vp6}\n                        </p>\n                        <div className='image'>\n                            { p6.disabled? \n                                morningPhase?\n                                    <img src={P6morndead} alt='pl' />\n                                    :\n                                    <img src={P6dead} alt='player 1' />\n                            :   \n                                morningPhase?\n                                    <img src={P6morning} alt='player1' />\n                                    :\n                                    <img src={P6moon} alt='player 1 dead' />\n                            }                        \n                        </div>\n                        <div className='description'>\n                            <h3>\n                                Alfred\n                            </h3>\n                            <p>\n                                A mysterious retired doctor, not much about him. I rarely ever see him around town. Rumors are, he spends his times hunting animals in the forest \n                                just outside of the town. \n                            </p>\n                        </div>\n                        <button \n                            className='playbutton'\n                            id='Alfred'\n                            disabled={disabled}\n                            onClick={Select}\n                            value={alive}\n                            >\n                            Select\n                        </button>\n                        \n                    </div>\n\n                </div>\n            </div>       \n            \n        </>\n    );\n}\n\n\nexport default Play;","/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js",["124"],"import { Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PostGame = ({ token, win, userKills, setInGame, inGame }) => {\n    \n    const [ userData, setUserData ] = useState({ username: '', \n                                                total_games: 0,\n                                                total_kills: 0,\n                                                total_wins: 0 \n                                            });\n    const game = 1                                        \n    let gameResults = 0\n\n    if (win === true) {\n        gameResults = 1\n    }\n    \n    let newTotalGames = game + userData.total_games;\n    let newTotalWins = gameResults + userData.total_wins;\n    let newTotalKills = userKills + userData.total_kills;\n\n\n    const Continue = () => {\n        axios.put('http://localhost:5000/postgame/me', {\n            token: token,\n            total_games: newTotalGames,\n            total_wins: newTotalWins,\n            total_kills: newTotalKills\n        })\n        .then(response => {\n            console.log(response.data);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n        setInGame(false);\n    }\n    \n\n   useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n    .then(response => {\n        setUserData(response.data);\n    });\n}, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    if (!inGame) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='postgame'>\n            { !userData? <p> Loading data... </p> \n            : \n            <>  \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                {\n                    win?\n                        <h3>\n                            Congratulations {userData.username} you won!\n                        </h3>\n                    :\n                        <h3>\n                            {userData.username}  you got caught!\n                        </h3>\n                }\n                <br/>\n                <h3>\n                    You eliminated {userKills} players! \n                </h3>\n\n                <p>\n                    -----------------------------------------------------------------------------------------\n                </p>\n                <br/>\n                <div className='endgame'>\n                    <h2>\n                        Total Games: &emsp; {userData.total_games || 0 } &emsp; + &emsp; {game} &emsp; = &emsp; {newTotalGames || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Wins: &emsp; {userData.total_wins || 0 } &emsp; + &emsp; {gameResults} &emsp; = &emsp; {newTotalWins || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Kills: &emsp; {userData.total_kills || 0 } &emsp; + &emsp; {userKills} &emsp; = &emsp; {newTotalKills || 0}\n                    </h2>\n                    <p>\n                        &emsp;\n                    </p>\n                    <p>\n                        Your account has been updated..\n                    </p>\n                    <br/>\n                    <button className='btn btn-background-circle'\n                        onClick={Continue}\n                        >\n                        Continue\n                    </button>\n                </div>\n        </>\n        }\n        </div>\n    );\n}\n\nexport default PostGame;","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js",["125"],"import { useEffect, useState } from \"react\";\n\nconst PREFIX = 'secretwerewolf-chat-'\n\nconst useLocalStorage = (key, initialValue) => {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) {\n            return JSON.parse(jsonValue) \n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } \n        else {\n            return initialValue;\n        }\n    });\n\nuseEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n}, [value, setValue])\n\nreturn [value, setValue];\n\n}\n\n\nexport default useLocalStorage;","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js",[],["126","127"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js",["128","129","130","131","132","133","134"],"import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nlet socket = null;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('');\n    const [ roomName, setRoomName ] = useState('');\n    const [ message, setMessage ] = useState();\n    const [ messages, setMessages ] = useState([]);\n    const ENDPOINT = 'http://localhost:5000';\n    const [ messagesActived, setMA ] = useState(false);\n    const location = useLocation();\n    const [ usersName, setUsersName ] = useState([]);\n    const [ start, setStart ] = useState(false)\n\n    // game stuff below \n    const [ werewolf, setWerewolf ] = useState();\n    const [ witch, setWitch ] = useState(); \n    const [ votes, setVotes ] = useState();\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (message) {\n        socket.emit('sendMessage', message, token);\n        setMessage('');\n    };\n}\n\nconst Start = (e) => {\n    e.preventDefault();\n    setStart(true)\n    \n    //-----------------------------ASSIGNING ROLES-------------------------------------->\n    \n    const randomWitch = usersName[Math.floor((Math.random() * usersName.length))];\n    setWitch(randomWitch);\n\n    const noWitch = username.filter((user) => {\n        return !user === witch\n    });\n\n    const randomWerewolf = noWitch[Math.floor((Math.random() * noWitch.length))];\n\n    setWitch(randomWerewolf);\n\n    //---------------------------------------------------------------------------------->\n\n\n\n    \n}\n\nuseEffect(() => {\n\n    if (!location.username || !location.name || !token) return\n\n    setUsername(location.username);\n    setRoomName(location.name);\n    // setURL(search);\n\n    socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n\n    socket.emit('join', { username: location.username, roomName: location.name, token }, () => {\n    });\n\n    socket.on('roomData', ({ room, users }) => {  \n        console.log(users)\n        const annoying = users[0].username\n        usersName.push({ username: annoying })\n    });\n\n    return () => {\n        if (!socket) return;\n        socket.disconnect();\n        socket.off();\n    }\n\n}, [location]);\n\n\nuseEffect(() => {\n\n    if (!socket) return\n    \n    socket.on('message', (data) => {\n        setMessages(m => [...m, data]);\n    });\n    setMA(true);\n    \n}, [])\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n\n                { !usersName?\n                    <p>\n                        Loadding....\n                    </p>\n                :\n                    <div className=\"leaderboardzz\">\n                        <th> \n                            Users:\n                        </th>\n\n                        { usersName.map(( users, key ) => {\n                            return (\n                            <tr key={key} className='listusers'>\n                                <td>\n                                    <p>\n                                        {users.username}\n                                    </p>\n                                </td>\n                            </tr>\n                        )})\n                        \n                        }\n                    </div>\n                }\n\n            <div className='multiContainer'>\n                <div className='infoBar'>\n                    <div className='leftInnerContainer'>\n                        <h3>\n                            {roomName}\n                        </h3>\n                    </div>\n                </div>\n                        { \n                        messages.map((message, i) => {\n                        return (    \n                            <div className='messageContainer' key={i}>\n                                <p className='sentText'> \n                                    {message.user}\n                                </p>  \n                                <div className='messageBox'>\n                                    <p className='messageText'>\n                                        {message.text}\n                                    </p>\n                                </div>\n                            </div>\n                                    )\n                                }\n                            ) \n                        }\n    \n                <form className='formz'>\n                    <input className='inputz'\n                        value={message}\n                        onChange={e => setMessage(e.target.value)}\n                        onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                        placeholder={'What would you like to say?'}\n                        >\n                    </input>\n                    <button className='sendButton'\n                        onClick={(e) => { sendMessage(e)}}\n                        >\n                        Send\n                    </button>\n                </form>                \n            </div>\n                \n            {    \n                usersName.length <= 0?\n\n                <div className='multiplayerCard'>\n                    <p>\n                        Waiting for more players....\n                    </p>\n                </div>\n            :\n                <div className='multiplayerCard'>\n                    {\n                       \n                        !start?\n\n                        <button className=\"btn btn-background-circle\" \n                            onClick={Start}\n                            >\n                            Ready\n                        </button>\n                        :\n                         <p>\n                             hi\n                         </p>\n\n                    }\n                    \n                </div>\n            }\n\n        </div>\n    );\n}\n\nexport default Multiplayer;","/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js",["135"],"import { Redirect, useHistory} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Room = ({ token }) => {\n    const [ userdata, setUserdata ] = useState('');\n    const [ name, setName ] = useState('');\n    const history = useHistory();\n\n    const Submit = (e) => {\n        e.preventDefault();\n        history.push({\n            pathname: '/multiplayer',\n            search: `?query=${name}`,\n            name,\n            username: userdata.username\n        })\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n            .then(response => {\n            setUserdata(response.data);\n    });\n    \n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' /> \n    }\n\n    return (\n        <div>\n            <form className=\"create\" onSubmit={Submit}>\n                <br/>\n                <br/>\n                <h1 className=\"text-center mt-5 text-white\"\n                    > \n                    Select A Room\n                </h1>\n                    <br/>\n                    <br/>\n                    <div>\n                        <label htmlFor='room'>Room Name</label>\n                        <input required\n                            type='text' \n                            name='room' \n                            placeholder='Enter a room name!'\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            >\n                        </input>\n                            <button className=\"btn btn-background-circle\"\n                                type='submit'\n                                >\n                                Join\n                            </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Room;","/Users/francistan/Desktop/secretwerewolf/client/src/components/About.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutMultiplayer.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutSingle.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":33,"column":8,"nodeType":"142","endLine":33,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":16,"nodeType":"146","messageId":"147","endLine":2,"endColumn":24},{"ruleId":"148","severity":1,"message":"149","line":18,"column":29,"nodeType":"150","endLine":18,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":25,"column":29,"nodeType":"150","endLine":25,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":32,"column":29,"nodeType":"150","endLine":32,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":42,"column":29,"nodeType":"150","endLine":42,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":49,"column":29,"nodeType":"150","endLine":49,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":56,"column":29,"nodeType":"150","endLine":56,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":62,"column":29,"nodeType":"150","endLine":62,"endColumn":41},{"ruleId":"140","severity":1,"message":"151","line":17,"column":8,"nodeType":"142","endLine":17,"endColumn":10,"suggestions":"152"},{"ruleId":"144","severity":1,"message":"153","line":34,"column":23,"nodeType":"146","messageId":"147","endLine":34,"endColumn":34},{"ruleId":"144","severity":1,"message":"154","line":37,"column":20,"nodeType":"146","messageId":"147","endLine":37,"endColumn":28},{"ruleId":"144","severity":1,"message":"155","line":39,"column":13,"nodeType":"146","messageId":"147","endLine":39,"endColumn":21},{"ruleId":"144","severity":1,"message":"156","line":53,"column":13,"nodeType":"146","messageId":"147","endLine":53,"endColumn":16},{"ruleId":"144","severity":1,"message":"157","line":53,"column":18,"nodeType":"146","messageId":"147","endLine":53,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":123,"column":37,"nodeType":"160","messageId":"161","endLine":123,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":190,"column":21,"nodeType":"164","messageId":"165","endLine":190,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":215,"column":26,"nodeType":"164","messageId":"165","endLine":215,"endColumn":50},{"ruleId":"140","severity":1,"message":"166","line":270,"column":8,"nodeType":"142","endLine":270,"endColumn":10,"suggestions":"167"},{"ruleId":"140","severity":1,"message":"141","line":49,"column":4,"nodeType":"142","endLine":49,"endColumn":6,"suggestions":"168"},{"ruleId":"140","severity":1,"message":"169","line":22,"column":4,"nodeType":"142","endLine":22,"endColumn":21,"suggestions":"170"},{"ruleId":"136","replacedBy":"171"},{"ruleId":"138","replacedBy":"172"},{"ruleId":"144","severity":1,"message":"173","line":13,"column":13,"nodeType":"146","messageId":"147","endLine":13,"endColumn":28},{"ruleId":"144","severity":1,"message":"174","line":15,"column":24,"nodeType":"146","messageId":"147","endLine":15,"endColumn":36},{"ruleId":"144","severity":1,"message":"175","line":19,"column":13,"nodeType":"146","messageId":"147","endLine":19,"endColumn":21},{"ruleId":"144","severity":1,"message":"176","line":19,"column":23,"nodeType":"146","messageId":"147","endLine":19,"endColumn":34},{"ruleId":"144","severity":1,"message":"177","line":21,"column":13,"nodeType":"146","messageId":"147","endLine":21,"endColumn":18},{"ruleId":"144","severity":1,"message":"178","line":21,"column":20,"nodeType":"146","messageId":"147","endLine":21,"endColumn":28},{"ruleId":"140","severity":1,"message":"179","line":81,"column":4,"nodeType":"142","endLine":81,"endColumn":14,"suggestions":"180"},{"ruleId":"140","severity":1,"message":"141","line":28,"column":8,"nodeType":"142","endLine":28,"endColumn":10,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["184"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["185"],"'setDisabled' is assigned a value but never used.","'setAlive' is assigned a value but never used.","'logVotes' is assigned a value but never used.","'vp7' is assigned a value but never used.","'setVP7' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has missing dependencies: 'playersRemaining', 'setInGame', 'setUserKills', and 'token'. Either include them or remove the dependency array. If 'setInGame' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["186"],["187"],"React Hook useEffect has a missing dependency: 'prefixedKey'. Either include it or remove the dependency array.",["188"],["182"],["183"],"'messagesActived' is assigned a value but never used.","'setUsersName' is assigned a value but never used.","'werewolf' is assigned a value but never used.","'setWerewolf' is assigned a value but never used.","'votes' is assigned a value but never used.","'setVotes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'usersName'. Either include them or remove the dependency array.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"191","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"191","fix":"202"},"Update the dependencies array to be: [token]",{"range":"203","text":"204"},"Update the dependencies array to be: [id]",{"range":"205","text":"206"},"Update the dependencies array to be: [playersRemaining, setInGame, setUserKills, token]",{"range":"207","text":"208"},{"range":"209","text":"204"},"Update the dependencies array to be: [value, setValue, prefixedKey]",{"range":"210","text":"211"},"Update the dependencies array to be: [location, token, usersName]",{"range":"212","text":"213"},{"range":"214","text":"204"},[819,821],"[token]",[485,487],"[id]",[10761,10763],"[playersRemaining, setInGame, setUserKills, token]",[1412,1414],[607,624],"[value, setValue, prefixedKey]",[2192,2202],"[location, token, usersName]",[730,732]]