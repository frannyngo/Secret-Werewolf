[{"/Users/francistan/Desktop/secretwerewolf/client/src/index.js":"1","/Users/francistan/Desktop/secretwerewolf/client/src/App.js":"2","/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js":"3","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js":"4","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js":"5","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js":"6","/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js":"7","/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js":"8","/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js":"9","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js":"10","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js":"11","/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js":"12","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js":"13","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js":"14","/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js":"15","/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js":"16","/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js":"17","/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js":"18","/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js":"19","/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js":"20","/Users/francistan/Desktop/secretwerewolf/client/src/components/About.js":"21","/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutMultiplayer.js":"22","/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutSingle.js":"23"},{"size":244,"mtime":1629772901259,"results":"24","hashOfConfig":"25"},{"size":3519,"mtime":1631145337598,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1629616759250,"results":"27","hashOfConfig":"25"},{"size":3831,"mtime":1631144341342,"results":"28","hashOfConfig":"25"},{"size":2995,"mtime":1630730764508,"results":"29","hashOfConfig":"25"},{"size":2626,"mtime":1630730716008,"results":"30","hashOfConfig":"25"},{"size":6756,"mtime":1631171885194,"results":"31","hashOfConfig":"25"},{"size":2150,"mtime":1631171954671,"results":"32","hashOfConfig":"25"},{"size":2759,"mtime":1631172861564,"results":"33","hashOfConfig":"25"},{"size":7301,"mtime":1631171922740,"results":"34","hashOfConfig":"25"},{"size":22950,"mtime":1631252129479,"results":"35","hashOfConfig":"25"},{"size":3594,"mtime":1630739451823,"results":"36","hashOfConfig":"25"},{"size":689,"mtime":1630566473705,"results":"37","hashOfConfig":"25"},{"size":1696,"mtime":1630626047757,"results":"38","hashOfConfig":"25"},{"size":2108,"mtime":1630626049699,"results":"39","hashOfConfig":"25"},{"size":2078,"mtime":1630626052342,"results":"40","hashOfConfig":"25"},{"size":640,"mtime":1630625137599,"results":"41","hashOfConfig":"25"},{"size":2189,"mtime":1631173129568,"results":"42","hashOfConfig":"25"},{"size":7476,"mtime":1631157694436,"results":"43","hashOfConfig":"25"},{"size":1876,"mtime":1630722144950,"results":"44","hashOfConfig":"25"},{"size":2943,"mtime":1631147203709,"results":"45","hashOfConfig":"25"},{"size":2832,"mtime":1631157937790,"results":"46","hashOfConfig":"25"},{"size":3019,"mtime":1631147120278,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1i1aqmq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/francistan/Desktop/secretwerewolf/client/src/index.js",[],["104","105"],"/Users/francistan/Desktop/secretwerewolf/client/src/App.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/reportWebVitals.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountDetails.js",["106"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\n\n\n\n const AccountDetails = ({ token }) => {\n    const [ userData, setUserData ] = useState();\n\n    const [accounts, setAccounts] = useState([]);\n\n    const getAccounts = async() => {\n        try {\n            const response = await fetch('http://localhost:5000/accounts');\n            const jsonData = await response.json();\n\n            setAccounts(jsonData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getAccounts();\n    }, []);\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        }).then(response => {\n            setUserData(response.data);\n        })\n    }, [])\n    \n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n    <div className='profile'>\n            <div className=\"leaderboard\">\n            <th> \n                Username:\n            </th>\n            <th>\n                Games:\n            </th>\n            <th>\n                Wins:\n            </th>\n            <th>\n                Win%:\n            </th>\n            <th>\n                Kills:\n            </th>\n            <th>\n                Kills/Round:\n            </th>\n            <tbody>\n                {accounts.map(account => (\n                <tr className=\"leaderboard-accounts\" \n                    key={account.account_id}\n                    >\n                    <td> \n                        <Link to={`/accounts/${account.account_id}`}>\n                            <p>\n                                {account.username} \n                            </p> \n                        </Link>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_games}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_wins}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {(account.total_wins/account.total_games * 100).toFixed(1)}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_kills}\n                        </p>\n                    </td>\n                    <td>\n                        <p>\n                            {(account.total_kills/account.total_games).toFixed(1)}\n                        </p>\n                    </td>\n                </tr> \n                ))\n                }\n            </tbody>\n        </div>\n        \n        <div className=\"showpage\">\n            { !userData? <p> Loading data... </p> : \n            <> \n                <h1>\n                    {userData.username}\n                </h1>\n                <br/>\n                <br/>\n                <h3>\n                    Games: {userData.total_games || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Wins: {userData.total_wins || \"Insufficient Data\" }\n                </h3> \n                <br/>\n                <h3>\n                    Win%: {(userData.total_wins/userData.total_games * 100).toFixed(1) || \"Insufficient Data\"}\n                </h3>  \n                <br/>\n                <h3>\n                    Kills: {userData.total_kills || \"Insufficient Data\"}\n                </h3> \n                <br/>\n                <h3>\n                    Kills Per Game: {(userData.total_kills/userData.total_games).toFixed(1) || \"Insufficient Data\"}\n                </h3>\n            </> \n            } \n        </div>\n    </div>\n    )\n}\n\nexport default AccountDetails;","/Users/francistan/Desktop/secretwerewolf/client/src/components/SignUp.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/SignIn.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/ListAccounts.js",["107","108"],"import React, { useEffect, useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AccountShowList = ({ token }) => {\n\n    const [ accounts, setAccounts ] = useState([]);\n    const [ accountsGames, setAccountsGames ] = useState([]);\n    const [ accountsKills, setAccountsKills ] = useState([]);\n    const [ userData, setUserData ] = useState();\n\n    const getAccounts = async() => {\n        try {\n            const response = await fetch('http://localhost:5000/leaderboard');\n            const jsonData = await response.json();\n\n            setAccounts(jsonData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n        const SubmitKills = async() => {\n                try {\n                    const response = await fetch('http://localhost:5000/leaderboard/kills');\n                    const jsonData = await response.json();\n        \n                    setAccountsKills(jsonData);\n                } catch (error) {\n                    console.log(error);\n                }\n        };\n\n\n\n        const SubmitGames = async() => {\n            try {\n                const response = await fetch('http://localhost:5000/leaderboard/games');\n                const jsonData = await response.json();\n\n                setAccountsGames(jsonData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n\n    useEffect(() => {\n        getAccounts();\n        SubmitGames();\n        SubmitKills();\n\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        }).then(response => {\n            setUserData(response.data);\n        })\n\n    }, []);\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        }).then(response => {\n            setUserData(response.data);\n        })\n    }, [])\n\n    if (!userData) {\n        return <p> Loading.. </p>\n    }\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n    <div className='leaderboardPage'>\n\n        <div className=\"leaderboards1\">\n            <th> \n                Win Leaders\n            </th>\n            <th> \n                &emsp;\n            </th>\n            <tbody>\n                {accounts.map(account => (\n                <tr className=\"leaderboard-accounts\" \n                    key={account.account_id}\n                    >\n                    <td> \n                        <Link to={`/accounts/${account.account_id}`}>\n                            <p>\n                                {account.username} \n                            </p> \n                        </Link>\n                    </td>\n                    <td>\n                        <p>\n                            {account.total_wins}\n                        </p>\n                    </td>\n                </tr> \n                ))\n                }\n            </tbody>\n        </div>\n\n        <div className=\"leaderboards2\">\n            <th> \n                Game Leaders\n            </th>\n            <th> \n                &emsp;\n            </th>\n            <tbody>\n                {accountsGames.map(acc => (\n                <tr className=\"leaderboard-accounts\" \n                    key={acc.account_id}\n                    >\n                    <td> \n                        <Link to={`/accounts/${acc.account_id}`}>\n                            <p>\n                                {acc.username} \n                            </p> \n                        </Link>\n                    </td>\n                    <td>\n                        <p>\n                            {acc.total_games}\n                        </p>\n                    </td>\n                </tr> \n                ))\n                }\n            </tbody>\n        </div>\n\n        <div className=\"leaderboards3\">\n            <th> \n                Kill Leaders\n            </th>\n            <th> \n                &emsp;\n            </th>\n            <tbody>\n                {accountsKills.map(ac => (\n                <tr className=\"leaderboard-accounts\" \n                    key={ac.account_id}\n                    >\n                    <td> \n                        <Link to={`/accounts/${ac.account_id}`}>\n                            <p>\n                                {ac.username} \n                            </p> \n                        </Link>\n                    </td>\n                    <td>\n                        <p>\n                            {ac.total_kills}\n                        </p>\n                    </td>\n                </tr> \n                ))\n                }\n            </tbody>\n        </div>\n\n        <div className=\"leaderboardsme\">\n            <th> \n                {userData.username}\n            </th>\n            <tbody>\n                \n                <tr className=\"leaderboard-accounts-me\" >\n                    <tr>\n                        <td> \n                            Games\n                        </td>\n                    \n                        <td>\n                            <p>\n                                {userData.total_games || '0' }\n                            </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            Wins\n                        </td>\n                        <td>\n                            <p>\n                                {userData.total_wins || '0' }\n                            </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            Wins% \n                        </td>\n                        <td>\n                            <p>\n                                {(userData.total_wins/userData.total_games * 100).toFixed(1) || \"0\"}\n                            </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            Kills \n                        </td>\n                        <td>\n                            <p>\n                                {userData.total_kills || \"Insufficient Data\"}\n                            </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> \n                            Kill/Game \n                        </td>\n                        <td>\n                            <p>\n                                {(userData.total_kills/userData.total_games).toFixed(1) || \"Insufficient Data\"}\n                            </p>\n                        </td>\n                    </tr>\n                </tr> \n\n            </tbody>\n        </div>\n\n    </div>\n    );\n}\n\n\nexport default AccountShowList;","/Users/francistan/Desktop/secretwerewolf/client/src/components/NavBar.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Home.js",["109","110","111","112","113","114","115"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport background from './img/wallpaper.png';\n\nconst Home = ({ token, setToken }) => {\n\n    const dropToken = () => {\n        setToken(undefined);\n    };\n    \n    return (\n        <div className='homebody' style={{ backgroundImage: `url(${background})` }}>\n            <ul>\n                { !token? \n                <>\n                    <Link to='/signin'>\n                        <li class='sigin' data-text='Sign In'>\n                            <a href='#'>\n                                Sign In\n                            </a>\n                        </li>\n                    </Link>\n                    <Link to='/signup'>\n                        <li class='sigup' data-text='Sign Up'>\n                            <a href='#'>\n                                Sign Up\n                            </a>\n                        </li>\n                     </Link>\n                     <Link to='/about'>\n                        <li class='about' data-text='About'>\n                            <a href='#'>\n                                About\n                            </a>\n                        </li>\n                     </Link>\n                </>\n                    :\n                <>\n                    <Link to='/playnow'>\n                        <li class='plaay' data-text=\"Play\">\n                            <a href='#'>\n                                Play\n                            </a>\n                        </li>\n                    </Link>\n                    <Link to='/listaccounts'>\n                        <li class='ldboard' data-text=\"Leaderboard\">\n                            <a href='#'>\n                                Leaderboard\n                            </a>\n                        </li>\n                    </Link>\n                    {/* <Link to='/accountdetails'>\n                        <li class='maccount' data-text=\"My Account\">\n                            <a href='#'>\n                                My Account\n                            </a>\n                        </li>\n                    </Link> */}\n                    <Link to='/about'>\n                        <li class='about' data-text='About'>\n                            <a href='#'>\n                                About\n                            </a>\n                        </li>\n                     </Link>\n                        <li class='signout' data-text=\"Sign Out\" onClick={dropToken}>\n                            <a href='#'>\n                                Sign Out\n                            </a>\n                        </li>                \n                </>\n                }   \n            </ul>\n        </div>  \n    );\n  }\n\nexport default Home;","/Users/francistan/Desktop/secretwerewolf/client/src/components/AccountShow.js",["116"],"import { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst AccountShow = ({ token }) => {\n    const { id } = useParams();\n    const [ accounts, setAccounts ] = useState([]);\n    const [ accountsGames, setAccountsGames ] = useState([]);\n    const [ accountsKills, setAccountsKills ] = useState([]);\n    const [ userData, setUserData ] = useState();\n\n    const getAccounts = async() => {\n        try {\n            const response = await fetch('http://localhost:5000/leaderboard');\n            const jsonData = await response.json();\n\n            setAccounts(jsonData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n        const SubmitKills = async() => {\n                try {\n                    const response = await fetch('http://localhost:5000/leaderboard/kills');\n                    const jsonData = await response.json();\n        \n                    setAccountsKills(jsonData);\n                } catch (error) {\n                    console.log(error);\n                }\n        };\n\n\n\n        const SubmitGames = async() => {\n            try {\n                const response = await fetch('http://localhost:5000/leaderboard/games');\n                const jsonData = await response.json();\n\n                setAccountsGames(jsonData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n\n    useEffect(() => {\n        getAccounts();\n        SubmitGames();\n        SubmitKills();\n\n    }, [])\n\n    useEffect(() => {\n\n        axios.post(`http://localhost:5000/accounts/${id}`, {\n            account_id: id\n        })\n        .then(response => {\n            setUserData(response.data);\n        });\n    }, []);\n\n\n    if (!userData) {\n        return <p> Loading.. </p>\n    }\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='leaderboardPage'>\n    \n            <div className=\"leaderboards1\">\n                <th> \n                    Win Leaders\n                </th>\n                <th> \n                    &emsp;\n                </th>\n                <tbody>\n                    {accounts.map(account => (\n                    <tr className=\"leaderboard-accounts\" \n                        key={account.account_id}\n                        >\n                        <td> \n                            <Link to={`/accounts/${account.account_id}`}>\n                                <p>\n                                    {account.username} \n                                </p> \n                            </Link>\n                        </td>\n                        <td>\n                            <p>\n                                {account.total_wins}\n                            </p>\n                        </td>\n                    </tr> \n                    ))\n                    }\n                </tbody>\n            </div>\n    \n            <div className=\"leaderboards2\">\n                <th> \n                    Game Leaders\n                </th>\n                <th> \n                    &emsp;\n                </th>\n                <tbody>\n                    {accountsGames.map(acc => (\n                    <tr className=\"leaderboard-accounts\" \n                        key={acc.account_id}\n                        >\n                        <td> \n                            <Link to={`/accounts/${acc.account_id}`}>\n                                <p>\n                                    {acc.username} \n                                </p> \n                            </Link>\n                        </td>\n                        <td>\n                            <p>\n                                {acc.total_games}\n                            </p>\n                        </td>\n                    </tr> \n                    ))\n                    }\n                </tbody>\n            </div>\n    \n            <div className=\"leaderboards3\">\n                <th> \n                    Kill Leaders\n                </th>\n                <th> \n                    &emsp;\n                </th>\n                <tbody>\n                    {accountsKills.map(ac => (\n                    <tr className=\"leaderboard-accounts\" \n                        key={ac.account_id}\n                        >\n                        <td> \n                            <Link to={`/accounts/${ac.account_id}`}>\n                                <p>\n                                    {ac.username} \n                                </p> \n                            </Link>\n                        </td>\n                        <td>\n                            <p>\n                                {ac.total_kills}\n                            </p>\n                        </td>\n                    </tr> \n                    ))\n                    }\n                </tbody>\n            </div>\n    \n            <div className=\"leaderboardsme\">\n                <th> \n                    {userData.username}\n                </th>\n                <tbody>\n                    \n                    <tr className=\"leaderboard-accounts-me\" >\n                        <tr>\n                            <td> \n                                Games\n                            </td>\n                        \n                            <td>\n                                <p>\n                                    {userData.total_games || '0' }\n                                </p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> \n                                Wins\n                            </td>\n                            <td>\n                                <p>\n                                    {userData.total_wins || '0' }\n                                </p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> \n                                Wins% \n                            </td>\n                            <td>\n                                <p>\n                                    {(userData.total_wins/userData.total_games * 100).toFixed(1) || \"0\"}\n                                </p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> \n                                Kills \n                            </td>\n                            <td>\n                                <p>\n                                    {userData.total_kills || \"Insufficient Data\"}\n                                </p>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td> \n                                Kill/Game \n                            </td>\n                            <td>\n                                <p>\n                                    {(userData.total_kills/userData.total_games).toFixed(1) || \"Insufficient Data\"}\n                                </p>\n                            </td>\n                        </tr>\n                    </tr> \n    \n                </tbody>\n            </div>\n    \n        </div>\n        );\n    }\n    \n\nexport default AccountShow;","/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js",["117"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/PostGame.js",["118"],"import { Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PostGame = ({ token, win, userKills, setInGame, inGame }) => {\n    \n    const [ userData, setUserData ] = useState({ username: '', \n                                                total_games: 0,\n                                                total_kills: 0,\n                                                total_wins: 0 \n                                            });\n    const game = 1                                        \n    let gameResults = 0\n\n    if (win === true) {\n        gameResults = 1\n    }\n    \n    let newTotalGames = game + userData.total_games;\n    let newTotalWins = gameResults + userData.total_wins;\n    let newTotalKills = userKills + userData.total_kills;\n\n\n    const Continue = () => {\n        axios.put('http://localhost:5000/postgame/me', {\n            token: token,\n            total_games: newTotalGames,\n            total_wins: newTotalWins,\n            total_kills: newTotalKills\n        })\n        .then(response => {\n            console.log(response.data);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n        setInGame(false);\n    }\n    \n\n   useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n    .then(response => {\n        setUserData(response.data);\n    });\n}, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    if (!inGame) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='postgame'>\n            { !userData? <p> Loading data... </p> \n            : \n            <>  \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                {\n                    win?\n                        <h3>\n                            Congratulations {userData.username} you won!\n                        </h3>\n                    :\n                        <h3>\n                            {userData.username}  you got caught!\n                        </h3>\n                }\n                <br/>\n                <h3>\n                    You eliminated {userKills} players! \n                </h3>\n\n                <p>\n                    -----------------------------------------------------------------------------------------\n                </p>\n                <br/>\n                <div className='endgame'>\n                    <h2>\n                        Total Games: &emsp; {userData.total_games || 0 } &emsp; + &emsp; {game} &emsp; = &emsp; {newTotalGames || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Wins: &emsp; {userData.total_wins || 0 } &emsp; + &emsp; {gameResults} &emsp; = &emsp; {newTotalWins || 0}\n                    </h2>\n                    <br/>\n                    <h2>\n                        Total Kills: &emsp; {userData.total_kills || 0 } &emsp; + &emsp; {userKills} &emsp; = &emsp; {newTotalKills || 0}\n                    </h2>\n                    <p>\n                        &emsp;\n                    </p>\n                    <p>\n                        Your account has been updated..\n                    </p>\n                    <br/>\n                    <button className='btn btn-background-circle'\n                        onClick={Continue}\n                        >\n                        Continue\n                    </button>\n                </div>\n        </>\n        }\n        </div>\n    );\n}\n\nexport default PostGame;","/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js",["119"],"import { useEffect, useState } from \"react\";\n\nconst PREFIX = 'secretwerewolf-chat-'\n\nconst useLocalStorage = (key, initialValue) => {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) {\n            return JSON.parse(jsonValue) \n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } \n        else {\n            return initialValue;\n        }\n    });\n\nuseEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n}, [value, setValue])\n\nreturn [value, setValue];\n\n}\n\n\nexport default useLocalStorage;","/Users/francistan/Desktop/secretwerewolf/client/src/components/ChatRoom.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Contacts.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Conversations.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/context/ContactsProvider.js",[],["120","121"],"/Users/francistan/Desktop/secretwerewolf/client/src/components/PlayNow.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js",["122","123","124","125","126","127","128","129","130","131"],"import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\nimport ReactScrollableFeed from 'react-scrollable-feed';\nimport MultiWitch from './img/multiWitch.png';\nimport MultiElmininatedWitch from './img/mutliEliminatedWitch.png';\n\nlet socket = null;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('');\n    const [ roomName, setRoomName ] = useState('');\n    const [ message, setMessage ] = useState();\n    const [ messages, setMessages ] = useState([]);\n    const ENDPOINT = 'http://localhost:5000';\n    const [ messagesActived, setMA ] = useState(false);\n    const location = useLocation();\n    const [ usersName, setUsersName ] = useState([]);\n    const [ start, setStart ] = useState(false)\n\n    // game stuff below \n    const [ werewolf, setWerewolf ] = useState();\n    const [ witch, setWitch ] = useState(); \n    const [ votes, setVotes ] = useState();\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (message) {\n        socket.emit('sendMessage', message, token);\n        setMessage('');\n    };\n}\n\nconst Start = (e) => {\n    e.preventDefault();\n    setStart(true)\n    \n    //-----------------------------ASSIGNING ROLES-------------------------------------->\n    \n    // const randomWitch = usersName[Math.floor((Math.random() * usersName.length))];\n    // setWitch(randomWitch);\n\n    // const noWitch = username.filter((user) => {\n    //     return !user === witch\n    // });\n\n    // const randomWerewolf = noWitch[Math.floor((Math.random() * noWitch.length))];\n\n    // setWitch(randomWerewolf);\n\n    //---------------------------------------------------------------------------------->\n\n\n\n    \n}\n\nuseEffect(() => {\n\n    if (!location.username || !location.name || !token) return\n\n    setUsername(location.username);\n    setRoomName(location.name);\n    // setURL(search);\n\n    socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n\n    socket.emit('join', { username: location.username, roomName: location.name, token }, () => {\n    });\n\n    return () => {\n        if (!socket) return;\n        socket.disconnect();\n        socket.off();\n    }\n\n}, [location]);\n\n\nuseEffect(() => {\n\n    if (!socket) return\n    \n    socket.on('message', (data) => {\n        setMessages(m => [...m, data]);\n    });\n    setMA(true);\n\n    socket.on('roomData', ({ room, data }) => {  \n        console.log(data)\n        data.forEach(u => {\n            console.log('INSIDE LOOP ', u.username)\n            setUsersName(un => [...un, u.username])\n        })\n    });\n    \n}, [])\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n\n                { !usersName?\n                    <p>\n                        Loadding....\n                    </p>\n                :\n                    <div className=\"leaderboardzz\">\n                        <th> \n                            Users:\n                        </th>\n\n                        { usersName.map(( username, key ) => {\n                            return (\n                            <tr key={key} className='listusers'>\n                                <td>\n                                    <p>\n                                        {username}\n                                    </p>\n                                </td>\n                            </tr>\n                        )})\n                        \n                        }\n                    </div>\n                }\n\n            <div className='multiContainer'>\n                <div className='infoBar'>\n                    <div className='leftInnerContainer'>\n                        <h3>\n                            {roomName}\n                        </h3>\n                    </div>\n                </div>\n                    <ReactScrollableFeed>\n                        { \n                        messages.map((message, i) => {\n                        return (    \n                            <div className='messageContainer' key={i}>\n                                <p className='sentText'> \n                                    {message.user}\n                                </p>  \n                                <div className='messageBox'>\n                                    <p className='messageText'>\n                                        {message.text}\n                                    </p>\n                                </div>\n                            </div>\n                                    )\n                                }\n                            ) \n                        }\n                    </ReactScrollableFeed>\n                <form className='formz'>\n                    <input className='inputz'\n                        value={message}\n                        onChange={e => setMessage(e.target.value)}\n                        onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                        placeholder={'What would you like to say?'}\n                        >\n                    </input>\n                    <button className='sendButton'\n                        onClick={(e) => { sendMessage(e)}}\n                        >\n                        Send\n                    </button>\n                </form>                \n            </div>\n                \n            {    \n                usersName.length <= 7?\n\n                <div className='multiplayerCard'>\n                    <p>\n                        Waiting for more players....\n                    </p>\n                </div>\n            :\n                <div className='multiplayerCard'>\n                    {\n                       \n                        !start?\n\n                        <button className=\"btn btn-background-circle\" \n                            onClick={Start}\n                            >\n                            Ready\n                        </button>\n                        :\n                        <>\n                            <div className='multibtns' height='10px'>\n                                <button>\n                                    trishaT\n                                </button>\n                                &emsp;&emsp;\n                                <button>\n                                    Aguilar\n                                </button>\n                                &emsp;&emsp;\n                                <button>\n                                    LT\n                                </button>\n                                &emsp;&emsp;\n                                <button>\n                                    Julez\n                                </button>\n                                &emsp;&emsp;\n                                <button>\n                                    DNCA\n                                </button>\n                                &emsp;&emsp;\n                                <button>\n                                    gersh\n                                </button>\n                            </div>\n                            <div className='multiimage'>\n                                <img src={MultiWitch} alt='single' width='380px;' height='380px'/>\n                            </div>\n                        </>\n                    }\n                </div>\n            }\n\n        </div>\n    );\n}\n\nexport default Multiplayer;","/Users/francistan/Desktop/secretwerewolf/client/src/components/Room.js",["132"],"import { Redirect, useHistory} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Room = ({ token }) => {\n    const [ userdata, setUserdata ] = useState('');\n    const [ name, setName ] = useState('');\n    const history = useHistory();\n\n    const Submit = (e) => {\n        e.preventDefault();\n        history.push({\n            pathname: '/multiplayer',\n            search: `?query=${name}`,\n            name,\n            username: userdata.username\n        })\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n            .then(response => {\n            setUserdata(response.data);\n    });\n    \n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' /> \n    }\n\n    return (\n        <div>\n            <form className=\"create\" onSubmit={Submit}>\n                <br/>\n                <br/>\n                <h1 className=\"text-center mt-5 text-white\"\n                    > \n                    Select A Room\n                </h1>\n                    <br/>\n                    <br/>\n                    <div>\n                        <label htmlFor='room'>Room Name</label>\n                        <input required\n                            type='text' \n                            name='room' \n                            placeholder='Enter a room name!'\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            >\n                        </input>\n                            <button className=\"btn btn-background-circle\"\n                                type='submit'\n                                >\n                                Join\n                            </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Room;","/Users/francistan/Desktop/secretwerewolf/client/src/components/About.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutMultiplayer.js",[],"/Users/francistan/Desktop/secretwerewolf/client/src/components/AboutSingle.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":33,"column":8,"nodeType":"139","endLine":33,"endColumn":10,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"138","line":59,"column":8,"nodeType":"139","endLine":59,"endColumn":10,"suggestions":"141"},{"ruleId":"137","severity":1,"message":"138","line":67,"column":8,"nodeType":"139","endLine":67,"endColumn":10,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":18,"column":29,"nodeType":"145","endLine":18,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":25,"column":29,"nodeType":"145","endLine":25,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":32,"column":29,"nodeType":"145","endLine":32,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":42,"column":29,"nodeType":"145","endLine":42,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":49,"column":29,"nodeType":"145","endLine":49,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":63,"column":29,"nodeType":"145","endLine":63,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":69,"column":29,"nodeType":"145","endLine":69,"endColumn":41},{"ruleId":"137","severity":1,"message":"146","line":64,"column":8,"nodeType":"139","endLine":64,"endColumn":10,"suggestions":"147"},{"ruleId":null,"fatal":true,"severity":2,"message":"148","line":244,"column":9},{"ruleId":"137","severity":1,"message":"138","line":49,"column":4,"nodeType":"139","endLine":49,"endColumn":6,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":22,"column":4,"nodeType":"139","endLine":22,"endColumn":21,"suggestions":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"135","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":29},{"ruleId":"154","severity":1,"message":"158","line":11,"column":13,"nodeType":"156","messageId":"157","endLine":11,"endColumn":21},{"ruleId":"154","severity":1,"message":"159","line":16,"column":13,"nodeType":"156","messageId":"157","endLine":16,"endColumn":28},{"ruleId":"154","severity":1,"message":"160","line":22,"column":13,"nodeType":"156","messageId":"157","endLine":22,"endColumn":21},{"ruleId":"154","severity":1,"message":"161","line":22,"column":23,"nodeType":"156","messageId":"157","endLine":22,"endColumn":34},{"ruleId":"154","severity":1,"message":"162","line":23,"column":13,"nodeType":"156","messageId":"157","endLine":23,"endColumn":18},{"ruleId":"154","severity":1,"message":"163","line":23,"column":20,"nodeType":"156","messageId":"157","endLine":23,"endColumn":28},{"ruleId":"154","severity":1,"message":"164","line":24,"column":13,"nodeType":"156","messageId":"157","endLine":24,"endColumn":18},{"ruleId":"154","severity":1,"message":"165","line":24,"column":20,"nodeType":"156","messageId":"157","endLine":24,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":78,"column":4,"nodeType":"139","endLine":78,"endColumn":14,"suggestions":"166"},{"ruleId":"137","severity":1,"message":"138","line":28,"column":8,"nodeType":"139","endLine":28,"endColumn":10,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["170"],["171"],["172"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["173"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 242 |\u001b[39m         }\u001b[0m\n\u001b[0m \u001b[90m 243 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 244 |\u001b[39m         \u001b[36melse\u001b[39m \u001b[36mif\u001b[39m (playersRemaining\u001b[33m.\u001b[39mlength \u001b[33m===\u001b[39m \u001b[35m2\u001b[39m) {\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 245 |\u001b[39m                 setWin(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 246 |\u001b[39m                 setPlayersRemaining([\u001b[32m'Simon'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Shaemus'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Linda'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Ed'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Dana'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Alfred'\u001b[39m])\u001b[0m\n\u001b[0m \u001b[90m 247 |\u001b[39m                 history\u001b[33m.\u001b[39mpush(\u001b[32m'/postgame'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m",["174"],"React Hook useEffect has a missing dependency: 'prefixedKey'. Either include it or remove the dependency array.",["175"],["168"],["169"],"no-unused-vars","'MultiElmininatedWitch' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'messagesActived' is assigned a value but never used.","'werewolf' is assigned a value but never used.","'setWerewolf' is assigned a value but never used.","'witch' is assigned a value but never used.","'setWitch' is assigned a value but never used.","'votes' is assigned a value but never used.","'setVotes' is assigned a value but never used.",["176"],["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"178","fix":"181"},{"desc":"182","fix":"183"},{"desc":"178","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"178","fix":"189"},"Update the dependencies array to be: [token]",{"range":"190","text":"191"},{"range":"192","text":"191"},{"range":"193","text":"191"},"Update the dependencies array to be: [id]",{"range":"194","text":"195"},{"range":"196","text":"191"},"Update the dependencies array to be: [value, setValue, prefixedKey]",{"range":"197","text":"198"},"Update the dependencies array to be: [location, token]",{"range":"199","text":"200"},{"range":"201","text":"191"},[819,821],"[token]",[1679,1681],[1879,1881],[1790,1792],"[id]",[1412,1414],[607,624],"[value, setValue, prefixedKey]",[2208,2218],"[location, token]",[730,732]]