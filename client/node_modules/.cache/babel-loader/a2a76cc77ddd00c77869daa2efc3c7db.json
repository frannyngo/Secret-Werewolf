{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst PREFIX = 'secretwerewolf-chat-';\n\nconst useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n\n    if (jsonValue != null) {\n      return JSON.parse(jsonValue);\n    }\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [value, setValue]);\n  return [value, setValue];\n};\n\n_s(useLocalStorage, \"wHwON667gzXRhc30SddvDnJMu1E=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/internalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,sBAAf;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAC3C,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACrC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;;AACA,QAAIG,SAAS,IAAI,IAAjB,EAAuB;AACnB,aAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;AACH;;AACD,QAAI,OAAOJ,YAAP,KAAwB,UAA5B,EAAwC;AACpC,aAAOA,YAAY,EAAnB;AACH,KAFD,MAGK;AACD,aAAOA,YAAP;AACH;AACJ,GAXiC,CAAlC;AAaJL,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACA,KAAD,EAAQC,QAAR,CAFM,CAAT;AAIA,SAAO,CAACD,KAAD,EAAQC,QAAR,CAAP;AAEC,CArBD;;GAAML,e;;AAwBN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst PREFIX = 'secretwerewolf-chat-'\n\nconst useLocalStorage = (key, initialValue) => {\n    const prefixedKey = PREFIX + key\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue != null) {\n            return JSON.parse(jsonValue) \n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        } \n        else {\n            return initialValue;\n        }\n    });\n\nuseEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n}, [value, setValue])\n\nreturn [value, setValue];\n\n}\n\n\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}