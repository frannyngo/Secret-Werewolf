{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport Town from './img/town.jpg';\nimport NightTown from './img/townnight.jpg';\nimport Player1 from './img/player1.tif';\nimport Player2 from './img/player2.tif';\nimport Player3 from './img/player3.tif';\nimport Player4 from './img/player4.tif';\nimport Player5 from './img/player5.tif';\nimport Player6 from './img/player6.tif';\nimport Player7 from './img/player7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = ({\n  token,\n  inGame,\n  setInGame,\n  setWin,\n  setUserKills,\n  userKills\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [nightPhase, setNightPhase] = useState(false);\n  const [morningPhase, setMorningPhase] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [userKilled, setUserKilled] = useState(false);\n  const [playersRemaining, setPlayersRemaining] = useState(7);\n  const [witch, setWitch] = useState(0);\n  const [alive, setAlive] = useState(true);\n  const [consoleLog, setConsoleLog] = useState();\n  const [logVotes, setLogVotes] = useState();\n  let history = useHistory();\n\n  const Start = () => {\n    setInGame(true);\n    setMorningPhase(true);\n    setNightPhase(false);\n    setDisabled(false);\n    setUserKilled(false);\n    setWitch(0);\n    setAlive(true);\n    setConsoleLog();\n    setPlayersRemaining(7);\n    setUserKills(0);\n    setConsoleLog();\n    setLogVotes();\n    setWin(null);\n  };\n\n  const Select = e => {\n    const selected = e.target.id;\n    let cpuVotes = playersRemaining - 2;\n\n    if (witch === 0) {\n      let healer = Math.floor(Math.random() * playersRemaining + 1);\n      setWitch(healer);\n    }\n\n    if (playersRemaining >= 3) {\n      if (morningPhase === true) {\n        let userVote = parseInt(selected, 10);\n        let votes = [];\n\n        for (let i = 0; i <= cpuVotes; i++) {\n          let random = Math.floor(Math.random() * playersRemaining + 1);\n          votes.push(random);\n        }\n\n        votes.push(userVote);\n        setLogVotes(votes);\n        let highestReoccurence = 1;\n        let counter = 0;\n        let mostVotes = [];\n\n        for (let i = 0; i <= votes.length; i++) {\n          for (let j = i; j < votes.length; j++) {\n            if (votes[i] === votes[j]) {\n              counter++;\n            }\n\n            if (highestReoccurence < counter) {\n              highestReoccurence = counter;\n              mostVotes = [votes[i]];\n            } else if (highestReoccurence === counter) {\n              if (!mostVotes.includes(votes[i])) mostVotes.push(votes[i]);\n            }\n          }\n\n          counter = 0;\n        }\n\n        if (mostVotes.length === 2) {\n          setConsoleLog(`Two players are tied for votes, there will be no execution today!`);\n        } else if (mostVotes.length >= 3) {\n          setConsoleLog(`Multiple ties, there will be no execution today!`);\n        } else if (mostVotes.length === 1) {\n          let parseVotes = parseInt(mostVotes, 10);\n\n          if (parseVotes === 7) {\n            setInGame(false);\n            setWin(false);\n            history.push('/postgame');\n          } else {\n            const hanged = document.getElementById(parseVotes);\n            hanged.disabled = true;\n            hanged.value = false;\n            setConsoleLog(`Player ${parseVotes} has been hanged`);\n          }\n        } else {\n          alert('Something wrong with vote.length');\n        }\n\n        highestReoccurence = 1;\n        counter = 0;\n        mostVotes = [];\n        votes = [];\n        setPlayersRemaining(playersRemaining - 1);\n        setMorningPhase(false);\n        setNightPhase(true);\n      } else if (nightPhase === true) {\n        const eliminate = e.target.id;\n        const userEliminates = parseInt(eliminate, 10);\n        const playerEliminated = document.getElementById(userEliminates);\n        const witchProtects = Math.floor(Math.random() * playersRemaining);\n\n        if (userEliminates === witchProtects) {\n          setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n        } else if (userEliminates !== witchProtects) {\n          playerEliminated.disabled = true;\n          playerEliminated.value = false;\n          setPlayersRemaining(playersRemaining - 1);\n          setUserKills(userKills + 1);\n          setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n        } else {\n          alert('somethings wrong with your night-phase, if witch is alive statements');\n        }\n\n        setLogVotes();\n        setMorningPhase(true);\n        setNightPhase(false);\n      } else {\n        alert('Something wrong with phases...');\n      }\n    } else if (playersRemaining === 2) {\n      setInGame(false);\n      setWin(true);\n      history.push('/postgame');\n    } else {\n      alert('Something is wrong with the game..');\n    }\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []);\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !inGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Good luck!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: Start,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"players-remaining\",\n        children: [\"Players Remaining: \", playersRemaining, \" \\u2003 Kills: \", userKills]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"console\",\n        children: consoleLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), !morningPhase ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phases\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"NIGHT-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Who would you like to eliminate?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: NightTown,\n          height: 600,\n          width: 800,\n          alt: \"night town\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phases\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MORNING-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vote who you would like to \\\"frame\\\" as the \\\"werewolf\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Town,\n          height: 600,\n          width: 800,\n          alt: \"town\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player1,\n          height: 100,\n          width: 100,\n          alt: \"player 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player2,\n          height: 100,\n          width: 100,\n          alt: \"player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player3,\n          height: 100,\n          width: 100,\n          alt: \"player 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player4,\n          height: 100,\n          width: 100,\n          alt: \"player 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player5,\n          height: 100,\n          width: 100,\n          alt: \"player 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player6,\n          height: 100,\n          width: 100,\n          alt: \"player 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Player7,\n          height: 100,\n          width: 100,\n          alt: \"player 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player7\",\n          id: 7,\n          value: userKilled,\n          disabled: disabled,\n          children: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player1\",\n          id: 1,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player2\",\n          id: 2,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player3\",\n          id: 3,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player4\",\n          id: 4,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player5\",\n          id: 5,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"player6\",\n          id: 6,\n          disabled: disabled,\n          onClick: Select,\n          value: alive,\n          children: \"Player 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"votes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Votes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), logVotes ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: logVotes.map(v => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vote\",\n            children: [\"Player: \", v]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No votes yet...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Play, \"cO3SnpJWAVvi//qBbKm7a30pWkE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js"],"names":["useEffect","useState","axios","useHistory","Redirect","Town","NightTown","Player1","Player2","Player3","Player4","Player5","Player6","Player7","Play","token","inGame","setInGame","setWin","setUserKills","userKills","userData","setUserData","nightPhase","setNightPhase","morningPhase","setMorningPhase","disabled","setDisabled","userKilled","setUserKilled","playersRemaining","setPlayersRemaining","witch","setWitch","alive","setAlive","consoleLog","setConsoleLog","logVotes","setLogVotes","history","Start","Select","e","selected","target","id","cpuVotes","healer","Math","floor","random","userVote","parseInt","votes","i","push","highestReoccurence","counter","mostVotes","length","j","includes","parseVotes","hanged","document","getElementById","value","alert","eliminate","userEliminates","playerEliminated","witchProtects","post","then","response","data","username","map","v"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA,YAApC;AAAkDC,EAAAA;AAAlD,CAAD,KAAmE;AAAA;;AAE5E,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BrB,QAAQ,EAA1C;AACA,QAAM,CAAEsB,UAAF,EAAcC,aAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEwB,YAAF,EAAgBC,eAAhB,IAAoCzB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAE0B,QAAF,EAAYC,WAAZ,IAA4B3B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAE4B,UAAF,EAAcC,aAAd,IAAgC7B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAE8B,gBAAF,EAAoBC,mBAApB,IAA4C/B,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAAEgC,KAAF,EAASC,QAAT,IAAsBjC,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAEkC,KAAF,EAASC,QAAT,IAAsBnC,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEoC,UAAF,EAAcC,aAAd,IAAgCrC,QAAQ,EAA9C;AACA,QAAM,CAAEsC,QAAF,EAAYC,WAAZ,IAA4BvC,QAAQ,EAA1C;AACA,MAAIwC,OAAO,GAAGtC,UAAU,EAAxB;;AAEA,QAAMuC,KAAK,GAAG,MAAM;AAChBzB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,aAAa;AACbN,IAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACAb,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAmB,IAAAA,aAAa;AACbE,IAAAA,WAAW;AACXtB,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAdD;;AAgBA,QAAMyB,MAAM,GAAIC,CAAD,IAAO;AAClB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,EAA1B;AACA,QAAIC,QAAQ,GAAGjB,gBAAgB,GAAG,CAAlC;;AAEA,QAAIE,KAAK,KAAK,CAAd,EAAiB;AACb,UAAIgB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAAhB,GAAmC,CAA/C,CAAb;AACAG,MAAAA,QAAQ,CAACe,MAAD,CAAR;AACH;;AAED,QAAKlB,gBAAgB,IAAI,CAAzB,EAA6B;AACzB,UAAKN,YAAY,KAAK,IAAtB,EAA6B;AACzB,YAAI4B,QAAQ,GAAGC,QAAQ,CAACT,QAAD,EAAW,EAAX,CAAvB;AACA,YAAIU,KAAK,GAAG,EAAZ;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,QAArB,EAA+BQ,CAAC,EAAhC,EAAoC;AAChC,cAAIJ,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAAhB,GAAmC,CAA/C,CAAb;AACAwB,UAAAA,KAAK,CAACE,IAAN,CAAWL,MAAX;AACH;;AACDG,QAAAA,KAAK,CAACE,IAAN,CAAWJ,QAAX;AACAb,QAAAA,WAAW,CAACe,KAAD,CAAX;AAEA,YAAIG,kBAAkB,GAAG,CAAzB;AACA,YAAIC,OAAO,GAAG,CAAd;AACA,YAAIC,SAAS,GAAG,EAAhB;;AAEA,aAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,KAAK,CAACM,MAA3B,EAAmCL,CAAC,EAApC,EAAwC;AACpC,eAAK,IAAIM,CAAC,GAAGN,CAAb,EAAgBM,CAAC,GAAEP,KAAK,CAACM,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,gBAAIP,KAAK,CAACC,CAAD,CAAL,KAAaD,KAAK,CAACO,CAAD,CAAtB,EAA2B;AACvBH,cAAAA,OAAO;AACV;;AAED,gBAAKD,kBAAkB,GAAGC,OAA1B,EAAmC;AAC/BD,cAAAA,kBAAkB,GAAGC,OAArB;AACAC,cAAAA,SAAS,GAAG,CAACL,KAAK,CAACC,CAAD,CAAN,CAAZ;AACH,aAHD,MAGO,IAAKE,kBAAkB,KAAKC,OAA5B,EAAqC;AAC1C,kBAAG,CAACC,SAAS,CAACG,QAAV,CAAmBR,KAAK,CAACC,CAAD,CAAxB,CAAJ,EAAkCI,SAAS,CAACH,IAAV,CAAeF,KAAK,CAACC,CAAD,CAApB;AACnC;AACJ;;AACDG,UAAAA,OAAO,GAAG,CAAV;AACH;;AAED,YAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBvB,UAAAA,aAAa,CAAE,mEAAF,CAAb;AACH,SAFD,MAGK,IAAIsB,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AAC5BvB,UAAAA,aAAa,CAAE,kDAAF,CAAb;AACH,SAFI,MAGA,IAAIsB,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC7B,cAAIG,UAAU,GAAGV,QAAQ,CAACM,SAAD,EAAY,EAAZ,CAAzB;;AAEA,cAAII,UAAU,KAAK,CAAnB,EAAsB;AAClB/C,YAAAA,SAAS,CAAC,KAAD,CAAT;AACAC,YAAAA,MAAM,CAAC,KAAD,CAAN;AACAuB,YAAAA,OAAO,CAACgB,IAAR,CAAa,WAAb;AACH,WAJD,MAKK;AACD,kBAAMQ,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,UAAxB,CAAf;AACAC,YAAAA,MAAM,CAACtC,QAAP,GAAkB,IAAlB;AACAsC,YAAAA,MAAM,CAACG,KAAP,GAAe,KAAf;AACA9B,YAAAA,aAAa,CAAE,UAAS0B,UAAW,kBAAtB,CAAb;AACH;AACJ,SAdI,MAeA;AACDK,UAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;;AAEDX,QAAAA,kBAAkB,GAAG,CAArB;AACAC,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,SAAS,GAAG,EAAZ;AACAL,QAAAA,KAAK,GAAG,EAAR;AACAvB,QAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACAL,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OA/DD,MAgEK,IAAID,UAAU,KAAK,IAAnB,EAAyB;AAC1B,cAAM+C,SAAS,GAAG1B,CAAC,CAACE,MAAF,CAASC,EAA3B;AACA,cAAMwB,cAAc,GAAGjB,QAAQ,CAACgB,SAAD,EAAY,EAAZ,CAA/B;AACA,cAAME,gBAAgB,GAAGN,QAAQ,CAACC,cAAT,CAAwBI,cAAxB,CAAzB;AACA,cAAME,aAAa,GAAGvB,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAA5B,CAAtB;;AAEI,YAAIwC,cAAc,KAAKE,aAAvB,EAAsC;AAClCnC,UAAAA,aAAa,CAAE,2BAA0BmC,aAAc,0BAA1C,CAAb;AACH,SAFD,MAGK,IAAIF,cAAc,KAAKE,aAAvB,EAAsC;AACvCD,UAAAA,gBAAgB,CAAC7C,QAAjB,GAA4B,IAA5B;AACA6C,UAAAA,gBAAgB,CAACJ,KAAjB,GAAyB,KAAzB;AACApC,UAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACAZ,UAAAA,YAAY,CAACC,SAAS,GAAG,CAAb,CAAZ;AACAkB,UAAAA,aAAa,CAAE,kCAAiCiC,cAAe,EAAlD,CAAb;AACH,SANI,MAOA;AACDF,UAAAA,KAAK,CAAC,sEAAD,CAAL;AACH;;AAEL7B,QAAAA,WAAW;AACXd,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAvBI,MAwBA;AACD6C,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,KA5FD,MA6FK,IAAItC,gBAAgB,KAAK,CAAzB,EAA4B;AAC7Bd,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAuB,MAAAA,OAAO,CAACgB,IAAR,CAAa,WAAb;AACH,KAJI,MAKA;AACDY,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,GA9GD;;AAgHArE,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACwE,IAAN,CAAW,mCAAX,EAAgD;AAC5C3D,MAAAA,KAAK,EAAEA;AADqC,KAAhD,EAGC4D,IAHD,CAGMC,QAAQ,IAAI;AACdtD,MAAAA,WAAW,CAACsD,QAAQ,CAACC,IAAV,CAAX;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;;AASA,MAAI,CAAC9D,KAAL,EAAY;AACR,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,cACM,CAACC,MAAD,gBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,OAAO,EAAE0B,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAaF;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,0CACwBX,gBADxB,qBACyDX,SADzD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBAEKiB;AAFL;AAAA;AAAA;AAAA;AAAA,cAJJ,EASM,CAACZ,YAAD,gBACF;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,GAAG,EAAEnB,SAAV;AAAqB,UAAA,MAAM,EAAE,GAA7B;AAAkC,UAAA,KAAK,EAAE,GAAzC;AAA8C,UAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,gBAWF;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,GAAG,EAAED,IAAV;AAAgB,UAAA,MAAM,EAAE,GAAxB;AAA6B,UAAA,KAAK,EAAE,GAApC;AAAyC,UAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAK,UAAA,GAAG,EAAEE,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,KAAK,EAAE,GAAvC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqCI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,SAAlB;AACI,UAAA,EAAE,EAAE,CADR;AAEI,UAAA,KAAK,EAAEgB,UAFX;AAGI,UAAA,QAAQ,EAAEF,QAHd;AAAA,oBAKKN,QAAQ,CAACyD;AALd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AACI,UAAA,SAAS,EAAC,SADd;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,QAAQ,EAAEnD,QAHd;AAII,UAAA,OAAO,EAAEgB,MAJb;AAKI,UAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAiBI;AACI,UAAA,SAAS,EAAC,SADd;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,QAAQ,EAAER,QAHd;AAII,UAAA,OAAO,EAAEgB,MAJb;AAKI,UAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eA0BI;AACI,UAAA,SAAS,EAAC,SADd;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,QAAQ,EAAER,QAHd;AAII,UAAA,OAAO,EAAEgB,MAJb;AAKI,UAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eAmCI;AACI,UAAA,SAAS,EAAC,SADd;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,QAAQ,EAAER,QAHd;AAII,UAAA,OAAO,EAAEgB,MAJb;AAKI,UAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCJ,eA4CI;AACI,UAAA,SAAS,EAAC,SADd;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,QAAQ,EAAER,QAHd;AAII,UAAA,OAAO,EAAEgB,MAJb;AAKI,UAAA,KAAK,EAAER,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5CJ,eAqDI;AACA,UAAA,SAAS,EAAC,SADV;AAEA,UAAA,EAAE,EAAE,CAFJ;AAGA,UAAA,QAAQ,EAAER,QAHV;AAIA,UAAA,OAAO,EAAEgB,MAJT;AAKA,UAAA,KAAK,EAAER,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ,eAqGI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIEI,QAAQ,gBACV;AAAA,oBACKA,QAAQ,CAACwC,GAAT,CAAaC,CAAC,iBACX;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA,mCACaA,CADb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL,yBADU,gBAUN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArGJ;AAAA;AAdJ,mBADJ;AA2IH,CAtSD;;GAAMlE,I;UAYYX,U;;;KAZZW,I;AAySN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport Town from './img/town.jpg';\nimport NightTown from './img/townnight.jpg';\nimport Player1 from './img/player1.tif';\nimport Player2 from './img/player2.tif';\nimport Player3 from './img/player3.tif';\nimport Player4 from './img/player4.tif';\nimport Player5 from './img/player5.tif';\nimport Player6 from './img/player6.tif';\nimport Player7 from './img/player7';\n\n\nconst Play = ({ token, inGame, setInGame, setWin, setUserKills, userKills }) => {\n\n    const [ userData, setUserData ] = useState();\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(false);\n    const [ disabled, setDisabled ] = useState(false);\n    const [ userKilled, setUserKilled ] = useState(false);\n    const [ playersRemaining, setPlayersRemaining ] = useState(7);\n    const [ witch, setWitch ] = useState(0);\n    const [ alive, setAlive ] = useState(true);\n    const [ consoleLog, setConsoleLog ] = useState();\n    const [ logVotes, setLogVotes ] = useState();\n    let history = useHistory();\n\n    const Start = () => {\n        setInGame(true);\n        setMorningPhase(true);\n        setNightPhase(false); \n        setDisabled(false);\n        setUserKilled(false);\n        setWitch(0);\n        setAlive(true);\n        setConsoleLog();\n        setPlayersRemaining(7);\n        setUserKills(0);\n        setConsoleLog();\n        setLogVotes();\n        setWin(null);\n    }\n\n    const Select = (e) => {\n        const selected = e.target.id;\n        let cpuVotes = playersRemaining - 2;\n\n        if (witch === 0) {\n            let healer = Math.floor((Math.random() * playersRemaining + 1));\n            setWitch(healer);\n        }\n\n        if ( playersRemaining >= 3 ) {\n            if ( morningPhase === true ) { \n                let userVote = parseInt(selected, 10);\n                let votes = []; \n\n                for (let i = 0; i <= cpuVotes; i++) {\n                    let random = Math.floor((Math.random() * playersRemaining + 1));\n                    votes.push(random);\n                }\n                votes.push(userVote);\n                setLogVotes(votes);\n                \n                let highestReoccurence = 1;\n                let counter = 0;\n                let mostVotes = [];\n\n                for (let i = 0; i <= votes.length; i++) {\n                    for (let j = i; j <votes.length; j++) {\n                        if (votes[i] === votes[j]) {\n                            counter++;\n                        }\n                        \n                        if ( highestReoccurence < counter) {\n                            highestReoccurence = counter\n                            mostVotes = [votes[i]];\n                        } else if ( highestReoccurence === counter) {\n                          if(!mostVotes.includes(votes[i])) mostVotes.push(votes[i])\n                        }\n                    }\n                    counter = 0;\n                }\n\n                if (mostVotes.length === 2) {\n                    setConsoleLog(`Two players are tied for votes, there will be no execution today!`);\n                }\n                else if (mostVotes.length >= 3) {\n                    setConsoleLog(`Multiple ties, there will be no execution today!`);\n                } \n                else if (mostVotes.length === 1) {\n                    let parseVotes = parseInt(mostVotes, 10);\n\n                    if (parseVotes === 7) {\n                        setInGame(false);\n                        setWin(false);\n                        history.push('/postgame');\n                    } \n                    else {\n                        const hanged = document.getElementById(parseVotes); \n                        hanged.disabled = true;\n                        hanged.value = false;\n                        setConsoleLog(`Player ${parseVotes} has been hanged`);\n                    }\n                }\n                else {\n                    alert('Something wrong with vote.length');\n                }\n                \n                highestReoccurence = 1\n                counter = 0;\n                mostVotes = [];\n                votes = [];\n                setPlayersRemaining(playersRemaining - 1)\n                setMorningPhase(false);\n                setNightPhase(true);\n            }\n            else if (nightPhase === true) {\n                const eliminate = e.target.id\n                const userEliminates = parseInt(eliminate, 10);\n                const playerEliminated = document.getElementById(userEliminates);\n                const witchProtects = Math.floor((Math.random() * playersRemaining));\n                \n                    if (userEliminates === witchProtects) {\n                        setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                    }\n                    else if (userEliminates !== witchProtects) {\n                        playerEliminated.disabled = true;\n                        playerEliminated.value = false;\n                        setPlayersRemaining(playersRemaining - 1);\n                        setUserKills(userKills + 1);\n                        setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n                    } \n                    else {\n                        alert('somethings wrong with your night-phase, if witch is alive statements');\n                    }\n\n                setLogVotes();\n                setMorningPhase(true);\n                setNightPhase(false);\n            }\n            else {\n                alert('Something wrong with phases...');\n            }\n        }\n        else if (playersRemaining === 2) {\n            setInGame(false);\n            setWin(true);\n            history.push('/postgame');\n        }\n        else {\n            alert('Something is wrong with the game..');\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return(\n        <>\n            { !inGame?\n                <div className=\"play\">\n                    <h1>\n                        Good luck!\n                    </h1>\n                    <button \n                        className='start-button'\n                        onClick={Start}\n                        >\n                        Play\n                    </button>\n                </div>\n            : \n            <>  \n                <h2 className=\"players-remaining\">\n                    Players Remaining: {playersRemaining} &emsp; Kills: {userKills}\n                </h2>\n                <h5 className=\"console\"\n                    >\n                    {consoleLog}\n                </h5>\n\n                { !morningPhase? \n                <div className='phases'>\n                    <h1> \n                        NIGHT-PHASE\n                    </h1>\n                    <h2>\n                        Who would you like to eliminate?\n                    </h2>\n                    <img src={NightTown} height={600} width={800} alt='night town'/>\n                </div>\n                :\n                <div className='phases'>\n                    <h1>\n                        MORNING-PHASE\n                    </h1>\n                    <h2>\n                        Vote who you would like to \"frame\" as the \"werewolf\"\n                    </h2>\n                    <img src={Town} height={600} width={800} alt='town'/>\n                    <img src={Player1} height={100} width={100} alt='player 1'/>\n                    <img src={Player2} height={100} width={100} alt='player 2'/>\n                    <img src={Player3} height={100} width={100} alt='player 3'/>\n                    <img src={Player4} height={100} width={100} alt='player 4'/>\n                    <img src={Player5} height={100} width={100} alt='player 5'/>\n                    <img src={Player6} height={100} width={100} alt='player 6'/>\n                    <img src={Player7} height={100} width={100} alt='player 7'/>\n                </div>\n                }\n                <div className='players'>\n                    <button className='player7'\n                        id={7}\n                        value={userKilled}\n                        disabled={disabled}\n                        > \n                        {userData.username}\n                    </button>\n                    <button \n                        className='player1'\n                        id={1}\n                        disabled={disabled}\n                        onClick={Select}\n                        value={alive}\n                        >\n                        Player 1\n                    </button>\n                    <button \n                        className='player2'\n                        id={2}\n                        disabled={disabled}\n                        onClick={Select}\n                        value={alive}\n                        >\n                        Player 2\n                    </button>\n                    <button \n                        className='player3'\n                        id={3}\n                        disabled={disabled}\n                        onClick={Select}\n                        value={alive}\n                        >\n                        Player 3\n                    </button>\n                    <button \n                        className='player4'\n                        id={4}\n                        disabled={disabled}\n                        onClick={Select}\n                        value={alive}\n                        >\n                        Player 4\n                    </button> \n                    <button \n                        className='player5'\n                        id={5}\n                        disabled={disabled}\n                        onClick={Select}\n                        value={alive}\n                        >\n                        Player 5\n                    </button>\n                    <button \n                    className='player6'\n                    id={6}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Player 6\n                    </button>\n                </div>\n\n                <div className='votes'>\n                    <h3>\n                        Votes:\n                    </h3>\n                { logVotes?   \n                <>  \n                    {logVotes.map(v => (\n                        <p className='vote'>\n                            Player: {v}\n                        </p>            \n                    ))\n                    }   \n                </>\n                :\n                    <p>\n                        No votes yet...\n                    </p>\n                }\n                </div>\n            </>     \n            }\n        </>\n    );\n}\n\n\nexport default Play;"]},"metadata":{},"sourceType":"module"}