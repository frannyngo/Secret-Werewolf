{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect } from \"react-router\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Multiplayer = ({\n  token,\n  location\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    username: ''\n  });\n  const [userData, setUserData] = useState();\n  const [chat, setChat] = useState([]);\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'http://localhost:5000';\n\n  const Send = e => {\n    e.preventDefault();\n    const {\n      username,\n      message\n    } = state; // socket.emit('chat message', { username, message })\n\n    setState({\n      message: '',\n      username: username\n    });\n    setChat([...chat, {\n      username,\n      message\n    }]);\n    console.log('CHAT AFTER SEND', chat);\n  };\n\n  const RenderChat = () => {\n    return Object.keys(state).map(chatty => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [state.username, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", state.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, chatty, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    socket.on('connection', ({\n      username,\n      message\n    }) => {\n      setChat([...chat, {\n        username,\n        message\n      }]);\n    }); // socket.on('connect', function () {\n    //     socket.emit('chat message', ({ username, message }) => {\n    //         socket.emit('chat message', { username, message })\n    //         setChat([...chat, { username, message }])\n    //     });\n    // });\n\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n      setState({\n        username: response.data.username\n      });\n    });\n    socket.emit('join', {\n      username: state.username\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.of();\n    };\n  }, [ENDPOINT]);\n\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multibody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" HELLOOOO?? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), RenderChat()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: Send,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          className: \"input\",\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"\",\n          placeholder: \"What would you like to say?\",\n          value: state.message,\n          onChange: e => {\n            setState({ ...state,\n              message: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bt\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Multiplayer, \"bQqeX78hU0VcVxNPrSBxAaYPcdA=\");\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","io","useState","useEffect","axios","Multiplayer","token","location","state","setState","message","username","userData","setUserData","chat","setChat","name","setName","room","setRoom","ENDPOINT","Send","e","preventDefault","console","log","RenderChat","Object","keys","map","chatty","socket","transports","on","post","then","response","data","emit","of","target","value"],"mappings":"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","sourcesContent":["import { Redirect } from \"react-router\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Multiplayer = ({ token , location }) => {\n    const [ state, setState ] = useState({ message: '', username: '' });\n    const [ userData, setUserData ] = useState();\n    const [ chat, setChat ] = useState([]);\n    const [ name, setName ] = useState('');\n    const [ room, setRoom ] = useState('');\n    const ENDPOINT = 'http://localhost:5000';\n\n\n\nconst Send = (e) => {\n    e.preventDefault();\n    const { username, message } = state\n    // socket.emit('chat message', { username, message })\n    setState({ message: '', username: username})\n    setChat([...chat, {username, message}])\n    console.log('CHAT AFTER SEND', chat);\n}\n\nconst RenderChat = () => {\n    return Object.keys(state).map((chatty) => {\n        <li key={chatty}>\n            <h3>\n                {state.username}: <span> {state.message} </span>\n            </h3>\n        </li>\n    })\n}\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n    \n    socket.on('connection', ({ username, message}) => {\n        setChat([...chat, { username, message }])\n    })\n\n    // socket.on('connect', function () {\n    //     socket.emit('chat message', ({ username, message }) => {\n    //         socket.emit('chat message', { username, message })\n    //         setChat([...chat, { username, message }])\n    //     });\n    // });\n\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n        .then(response => {\n        setUserData(response.data);\n        setState({ username: response.data.username })\n})\n\n    socket.emit('join', { username: state.username }, () => {\n\n    });\n\n    return () => {\n        socket.emit('disconnect');\n\n        socket.of();\n    }\n\n}, [ENDPOINT])\n\n    if (!userData) {\n    return <p> Loading... </p>\n}\n\n    if (!token) {\n    return <Redirect to='/' />\n}\n\n    return (\n        <>\n            <div className='multibody' >\n                <div>\n                    <h1> HELLOOOO?? </h1>\n                        {/* {chat.map(msg => {\n                            <li>\n                                <h3>\n                                    {msg.username} <span> {msg.message} </span>\n                                </h3>\n                            </li>\n                        })} */}\n                        {RenderChat()}\n                </div>\n\n                <form className='form' onSubmit={Send}>\n\n                <input required\n                    className='input'  \n                    type='text'\n                    autoComplete='off'\n                    id=''\n                    placeholder='What would you like to say?'\n                    value={state.message}\n                    onChange={e => { setState({...state, message: e.target.value})}}\n                    >\n                </input>\n                <button className='bt'>\n                    Send\n                </button>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}