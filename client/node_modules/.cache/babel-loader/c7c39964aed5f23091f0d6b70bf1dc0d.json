{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [url, setURL] = useState('');\n  const [message, setMessage] = useState();\n  const [messages, setMessages] = useState([{\n    user: '',\n    text: ''\n  }]);\n  const ENDPOINT = 'http://localhost:5000';\n  const [players, setPlayers] = useState([{\n    user: '',\n    id: ''\n  }]); // <---- store players as they join\n\n  const [isPending, setIsPending] = useState(false);\n  const [everybodyReady, setEverybodyReady] = useState([]);\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket'],\n    upgrade: false\n  });\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', {\n        user: username,\n        text: message\n      });\n      setMessage('');\n    }\n\n    ;\n    console.log(messages);\n    console.log(url);\n  }; // const Ready = (e) => { \n  //     e.preventDefault();\n  //     setIsPending(true);\n  //     console.log(players)\n  //     let user = players.find(player => player.id === token)\n  //     console.log(user);\n  //     setEverybodyReady([...everybodyReady, user]);\n  // }\n  // -----------------------JOIN/DISCONNECT------------------>\n\n\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket'],\n      upgrade: false\n    });\n    ;\n    const {\n      name,\n      username,\n      search\n    } = location;\n    setUsername(username);\n    setRoomName(name);\n    setURL(search); // const newz = players\n    // newz.push({ user: username, id: token }) // <------- create unique players with socket.id \n    // setPlayers(newz);\n    // console.log(token)\n    // console.log( username )\n\n    socket.emit('join', {\n      username,\n      roomName\n    }, () => {});\n    socket.on('message', message => {\n      const messagez = messages;\n      messagez.push({\n        user: message.username,\n        text: message.text\n      });\n      setMessages(messagez); // setMessages([...messages, {user: message.username, text: message.text }]);\n      // console.log(messages);\n    });\n    return () => {\n      socket.emit('disconnected', {\n        username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location, !username, !roomName, !url, messages, setMessages]); // -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n  // ----------------------------------------->\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftInnerContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), messages.map((message, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sentText\",\n            children: message.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageBox\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"messageText\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formz\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputz\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null,\n          placeholder: 'What would you like to say?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sendButton\",\n          onClick: e => {\n            sendMessage(e);\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-background-circle\",\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-background-circle\",\n      disabled: true,\n      children: \"Waiting for others....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Multiplayer, \"Ech/T0fVVoNkayqJn1s98gP4nwQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","socket","Multiplayer","token","username","setUsername","roomName","setRoomName","url","setURL","message","setMessage","messages","setMessages","user","text","ENDPOINT","players","setPlayers","id","isPending","setIsPending","everybodyReady","setEverybodyReady","location","transports","upgrade","sendMessage","e","preventDefault","emit","console","log","name","search","on","messagez","push","off","map","i","target","value","key"],"mappings":"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","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nlet socket;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('');\n    const [ roomName, setRoomName ] = useState('');\n    const [ url, setURL ] = useState('');\n    const [ message, setMessage ] = useState();\n    const [ messages, setMessages ] = useState([{ user:'', text:'' }]);\n    const ENDPOINT = 'http://localhost:5000';\n    const [ players, setPlayers ] = useState([{ user:'', id:'' }]);  // <---- store players as they join\n    const [ isPending, setIsPending ] = useState(false);\n    const [ everybodyReady, setEverybodyReady ] = useState([]);\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (message) {\n        socket.emit('sendMessage', { user: username, text: message });\n        setMessage('');\n    };\n    console.log(messages);\n    console.log(url);\n}\n\n// const Ready = (e) => { \n//     e.preventDefault();\n//     setIsPending(true);\n//     console.log(players)\n\n//     let user = players.find(player => player.id === token)\n\n//     console.log(user);\n\n//     setEverybodyReady([...everybodyReady, user]);\n// }\n\n\n// -----------------------JOIN/DISCONNECT------------------>\nuseEffect(() => {\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n    ;\n    const { name, username, search } = location\n    setUsername(username);\n    setRoomName(name);\n    setURL(search);\n\n    // const newz = players\n    // newz.push({ user: username, id: token }) // <------- create unique players with socket.id \n    // setPlayers(newz);\n    // console.log(token)\n    // console.log( username )\n\n    socket.emit('join', { username, roomName }, () => {\n\n    });\n\n\n    socket.on('message', (message) => {\n        const messagez = messages\n        messagez.push({user: message.username, text: message.text })\n        setMessages(messagez);\n        // setMessages([...messages, {user: message.username, text: message.text }]);\n        // console.log(messages);\n    });\n    \n    return () => {\n        socket.emit('disconnected', { username })\n        socket.off();\n    }\n\n}, [ENDPOINT, location, !username, !roomName, !url, messages, setMessages]);\n\n// -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n\n\n// ----------------------------------------->\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n            <div className='multiContainer'>\n                <div className='infoBar'>\n                    <div className='leftInnerContainer'>\n                        <h3>\n                            {roomName}\n                        </h3>\n                    </div>\n                </div>\n                        { \n                        messages.map((message, i) => {\n                        return (    \n                            <div className='messageContainer' key={i}>\n                                <p className='sentText'> \n                                    {message.user}\n                                </p>  \n                                <div className='messageBox'>\n                                    <p className='messageText'>\n                                        {message.text}\n                                    </p>\n                                </div>\n                            </div>\n                                    )\n                                }\n                            ) \n                        }\n    \n                <form className='formz'>\n                    <input className='inputz'\n                        value={message}\n                        onChange={e => setMessage(e.target.value)}\n                        onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                        placeholder={'What would you like to say?'}\n                        >\n                    </input>\n                    <button className='sendButton'\n                        onClick={(e) => { sendMessage(e)}}\n                        >\n                        Send\n                    </button>\n                </form>                \n            </div>\n                \n                { !isPending && <button className=\"btn btn-background-circle\">Ready</button> }\n                { isPending && <button className=\"btn btn-background-circle\" disabled>Waiting for others....</button> }\n\n        </div>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}