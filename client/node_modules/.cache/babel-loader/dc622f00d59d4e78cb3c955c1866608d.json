{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect } from \"react-router\";\nimport io from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000');\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [message, setMessage] = useState({\n    message: '',\n    username: ''\n  });\n  const [userData, setUserData] = useState();\n  const [chat, setChat] = useState();\n\n  const Send = e => {\n    e.preventDefault();\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      username,\n      message\n    }, key) => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [username, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []);\n\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multibody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: Send,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          className: \"input\",\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"\",\n          placeholder: \"What would you like to say?\",\n          value: message.message,\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bt\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Multiplayer, \"ibNYdzij2acorkM2h7COxdNmSXc=\");\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","io","useState","useEffect","axios","socket","connect","Multiplayer","token","message","setMessage","username","userData","setUserData","chat","setChat","Send","e","preventDefault","renderChat","map","key","post","then","response","data","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAH,CAAW,uBAAX,CAAf;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC;AAAEO,IAAAA,OAAO,EAAE,EAAX;AAAeE,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CAAxC;AACA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,EAAlC;;AAEJ,QAAMc,IAAI,GAAIC,CAAD,IAAO;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,WAAOL,IAAI,CAACM,GAAL,CAAS,CAAC;AAACT,MAAAA,QAAD;AAAWF,MAAAA;AAAX,KAAD,EAAsBY,GAAtB,KAA8B;AAC1C;AAAA;AAAA,+BACI;AAAA,qBACKV,QADL,qBACgB;AAAA,4BAAQF,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASY,GAAT;AAAA;AAAA;AAAA;AAAA;AAKH,KANM,CAAP;AAOH,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACkB,IAAN,CAAW,mCAAX,EAAgD;AAC5Cd,MAAAA,KAAK,EAAEA;AADqC,KAAhD,EAEGe,IAFH,CAEQC,QAAQ,IAAI;AAChBX,MAAAA,WAAW,CAACW,QAAQ,CAACC,IAAV,CAAX;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,MAAI,CAACb,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACJ,KAAL,EAAY;AACR,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEG,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEQ,IAAjC;AAAA,gCAEA;AAAO,UAAA,QAAQ,MAAf;AACI,UAAA,SAAS,EAAC,OADd;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,YAAY,EAAC,KAHjB;AAII,UAAA,EAAE,EAAC,EAJP;AAKI,UAAA,WAAW,EAAC,6BALhB;AAMI,UAAA,KAAK,EAAEP,OAAO,CAACA,OANnB;AAOI,UAAA,QAAQ,EAAEQ,CAAC,IAAI;AAAEP,YAAAA,UAAU,CAACO,CAAC,CAACS,MAAF,CAASC,KAAV,CAAV;AAA2B;AAPhD;AAAA;AAAA;AAAA;AAAA,gBAFA,eAYA;AAAQ,UAAA,SAAS,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0BH,CA7DD;;GAAMpB,W;;KAAAA,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { Redirect } from \"react-router\";\nimport io from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst socket = io.connect('http://localhost:5000');\n\nconst Multiplayer = ({ token }) => {\n    const [ message, setMessage ] = useState({ message: '', username: '' });\n    const [ userData, setUserData ] = useState();\n    const [ chat, setChat ] = useState();\n\nconst Send = (e) => {\n    e.preventDefault();\n}\n\nconst renderChat = () => {\n    return chat.map(({username, message}, key) => {\n        <li key={key}>\n            <h3>\n                {username}: <span> {message} </span>\n            </h3>\n        </li>\n    })\n}\n\nuseEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    }).then(response => {\n        setUserData(response.data);\n    })\n}, [])\n\nif (!userData) {\n    return <p> Loading... </p>\n}\n\nif (!token) {\n    return <Redirect to='/' />\n}\n\n    return (\n        <>\n            <div className='multibody' >\n                <div>\n                    <ul className='messages' />\n                </div>\n\n                <form className='form' onSubmit={Send}>\n\n                <input required\n                    className='input'  \n                    type='text'\n                    autoComplete='off'\n                    id=''\n                    placeholder='What would you like to say?'\n                    value={message.message}\n                    onChange={e => { setMessage(e.target.value)}}\n                    >\n                </input>\n                <button className='bt'>\n                    Send\n                </button>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}