{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    username: ''\n  });\n  const [userData, setUserData] = useState();\n  const [chat, setChat] = useState([]);\n  const [roomName, setRoomName] = useState('');\n  const [roomID, setRoomID] = useState('');\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket']\n  });\n\n  const sendMessage = e => {\n    e.preventDefault(); // const { username, message } = state\n    // // socket.emit('chat message', { username, message })\n    // setState({ message: '', username: username})\n    // setChat([...chat, {username, message}])\n    // console.log('CHAT AFTER SEND', chat);\n\n    if (state) {\n      socket.emit('sendMessage', state.message, () => {\n        setState({\n          message: '',\n          username: username\n        });\n      });\n    }\n  };\n\n  console.log(state, chat);\n\n  const RenderChat = () => {\n    return Object.keys(state).map(chatty => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [state.username, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", state.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, chatty, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    setRoomName(location.name);\n    setRoomID(location.room);\n    setState({\n      username: state.username\n    });\n    socket.emit('join', {\n      username: state.username,\n      roomName,\n      roomID\n    }, () => {});\n    return () => {\n      socket.emit('disconnected', {\n        username: state.username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location]);\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    socket.on('message', message => {\n      setChat([...chat, message]);\n    });\n  }, [chat]);\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multibody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" HELLOOOO?? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), RenderChat()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: Send,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"What would you like to say?\",\n          value: state.message,\n          onChange: e => {\n            setState({ ...state,\n              message: e.target.value\n            });\n          },\n          onKeyPress: e => e.key === 'Enter' ? sendMessage() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bt\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Multiplayer, \"BwJ4Uz2lysjB5xbyhFyPxGHs92Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","axios","Multiplayer","token","state","setState","message","username","userData","setUserData","chat","setChat","roomName","setRoomName","roomID","setRoomID","ENDPOINT","location","socket","transports","sendMessage","e","preventDefault","emit","console","log","RenderChat","Object","keys","map","chatty","post","then","response","data","name","room","off","on","Send","target","value","key"],"mappings":"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","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Multiplayer = ({ token }) => {\n    const [ state, setState ] = useState({ message: '', username: '' });\n    const [ userData, setUserData ] = useState();\n    const [ chat, setChat ] = useState([]);\n    const [ roomName, setRoomName ] = useState('');\n    const [ roomID, setRoomID ] = useState('');\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n\nconst sendMessage = (e) => {\n    e.preventDefault()\n    // const { username, message } = state\n    // // socket.emit('chat message', { username, message })\n    // setState({ message: '', username: username})\n    // setChat([...chat, {username, message}])\n    // console.log('CHAT AFTER SEND', chat);\n    if (state) {\n        socket.emit('sendMessage', state.message, () => {\n            setState({ message: '', username: username})\n\n        })\n    }\n}\n\nconsole.log(state, chat);\n\nconst RenderChat = () => {\n    return Object.keys(state).map((chatty) => {\n        <li key={chatty}>\n            <h3>\n                {state.username}: <span> {state.message} </span>\n            </h3>\n        </li>\n    })\n}\n\nuseEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n        .then(response => {\n        setUserData(response.data);\n});\n}, []);\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n    setRoomName(location.name);\n    setRoomID(location.room)\n    setState({ username: state.username })\n\n    socket.emit('join', { username: state.username, roomName, roomID }, () => {\n\n    });\n\n    return () => {\n        socket.emit('disconnected', { username: state.username });\n\n        socket.off();\n    }\n\n}, [ENDPOINT, location]);\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n    socket.on('message', (message) => {\n        setChat([...chat, message])\n    })\n}, [chat]);\n\n\n \n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!userData) {\n    return <p> Loading... </p>\n}\n\n    if (!token) {\n    return <Redirect to='/' />\n}\n\n\n\n    return (\n        <>\n            <div className='multibody' >\n                <div>\n                    <h1> HELLOOOO?? </h1>\n                        {/* {chat.map(msg => {\n                            <li>\n                                <h3>\n                                    {msg.username} <span> {msg.message} </span>\n                                </h3>\n                            </li>\n                        })} */}\n                        {RenderChat()}\n                </div>\n\n                <form className='form' onSubmit={Send}>\n                <input required\n                    className='input'  \n                    type='text'\n                    placeholder='What would you like to say?'\n                    value={state.message}\n                    onChange={e => { setState({...state, message: e.target.value})}}\n                    onKeyPress={e => e.key === 'Enter' ? sendMessage() : null}\n                    >\n                </input>\n                <button className='bt'>\n                    Send\n                </button>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}