{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [url, setURL] = useState('');\n  const [message, setMessage] = useState();\n  const [messages, setMessages] = useState([{\n    user: '',\n    text: ''\n  }]);\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket'],\n    upgrade: false\n  });\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', {\n        user: username,\n        text: message\n      });\n      setMessage('');\n    }\n\n    ;\n    console.log(messages);\n    console.log(url);\n  }; // -----------------------JOIN/DISCONNECT------------------>\n\n\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket'],\n      upgrade: false\n    });\n    ;\n    const {\n      name,\n      username,\n      search\n    } = location;\n    setUsername(username);\n    setRoomName(name);\n    setURL(search);\n    socket.emit('join', {\n      username,\n      roomName\n    }, () => {});\n    socket.on('message', message => {\n      const messagez = messages;\n      messagez.push({\n        user: message.username,\n        text: message.text\n      });\n      setMessages(messagez); // setMessages([...messages, {user: message.username, text: message.text }]);\n      // console.log(messages);\n    });\n    return () => {\n      socket.emit('disconnected', {\n        username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location, !username, !roomName, !url]); // -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n  // ----------------------------------------->\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftInnerContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: messages.map((message, i) => {\n              /*#__PURE__*/\n              _jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [message.user, \" : \", message.text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"formz\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputz\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null,\n            placeholder: 'What would you like to say?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            onClick: e => {\n              sendMessage(e);\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Multiplayer, \"r+ZqlXQgnmjoAQWEhB1/WwWN20o=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","socket","Multiplayer","token","username","setUsername","roomName","setRoomName","url","setURL","message","setMessage","messages","setMessages","user","text","ENDPOINT","location","transports","upgrade","sendMessage","e","preventDefault","emit","console","log","name","search","on","messagez","push","off","map","i","target","value","key"],"mappings":"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","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nlet socket;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('');\n    const [ roomName, setRoomName ] = useState('');\n    const [ url, setURL ] = useState('');\n    const [ message, setMessage ] = useState();\n    const [ messages, setMessages ] = useState([{ user:'', text:'' }]);\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n\n\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (message) {\n        socket.emit('sendMessage', { user: username, text: message });\n        setMessage('');\n    };\n    console.log(messages);\n    console.log(url);\n}\n\n// -----------------------JOIN/DISCONNECT------------------>\nuseEffect(() => {\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n    ;\n    const { name, username, search } = location\n    setUsername(username);\n    setRoomName(name);\n    setURL(search);\n\n    socket.emit('join', { username, roomName }, () => {\n\n    });\n\n    socket.on('message', (message) => {\n        const messagez = messages\n        messagez.push({user: message.username, text: message.text })\n        setMessages(messagez);\n        // setMessages([...messages, {user: message.username, text: message.text }]);\n        // console.log(messages);\n    });\n    \n    return () => {\n        socket.emit('disconnected', { username })\n        socket.off();\n    }\n\n}, [ENDPOINT, location, !username, !roomName, !url]);\n\n// -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n\n\n\n// ----------------------------------------->\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n            <div className='multiContainer'>\n                <div className='infoBar'>\n                    <div className='leftInnerContainer'>\n                        <div>\n                            {/* img */}\n                        </div>\n                        <div>\n                            { messages.map((message, i) => {\n                                <div key={i}>\n                                    <p>\n                                        {message.user} : {message.text}  \n                                    </p>  \n                                </div>\n                            })}\n                        </div>\n                    \n                    </div>\n                \n                    <form className='formz'>\n                        <input className='inputz'\n                            value={message}\n                            onChange={e => setMessage(e.target.value)}\n                            onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                            placeholder={'What would you like to say?'}\n                            >\n                        </input>\n                        <button className='sendButton'\n                            onClick={(e) => { sendMessage(e)}}\n                            >\n                            Send\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}