{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    username: ''\n  });\n  const [userData, setUserData] = useState();\n  const [chat, setChat] = useState([]);\n  const [roomName, setRoomName] = useState('');\n  const [roomID, setRoomID] = useState('');\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n\n  const Send = e => {\n    e.preventDefault();\n    const {\n      username,\n      message\n    } = state; // socket.emit('chat message', { username, message })\n\n    setState({\n      message: '',\n      username: username\n    });\n    setChat([...chat, {\n      username,\n      message\n    }]);\n    console.log('CHAT AFTER SEND', chat);\n  };\n\n  const RenderChat = () => {\n    return Object.keys(state).map(chatty => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [state.username, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", state.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, chatty, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n      setState({\n        username: response.data.username\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    setRoomName(location.name);\n    setRoomID(location.room);\n    socket.emit('join', {\n      username: state.username,\n      roomName,\n      roomID\n    }, () => {});\n    return () => {\n      socket.emit('disconnected', {\n        username: state.username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location]);\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    socket.on('message', message => {});\n  });\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multibody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" HELLOOOO?? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), RenderChat()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: Send,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          className: \"input\",\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"\",\n          placeholder: \"What would you like to say?\",\n          value: state.message,\n          onChange: e => {\n            setState({ ...state,\n              message: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bt\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Multiplayer, \"BwJ4Uz2lysjB5xbyhFyPxGHs92Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","axios","Multiplayer","token","state","setState","message","username","userData","setUserData","chat","setChat","roomName","setRoomName","roomID","setRoomID","ENDPOINT","location","Send","e","preventDefault","console","log","RenderChat","Object","keys","map","chatty","post","then","response","data","socket","transports","name","room","emit","off","on","target","value"],"mappings":"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","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Multiplayer = ({ token }) => {\n    const [ state, setState ] = useState({ message: '', username: '' });\n    const [ userData, setUserData ] = useState();\n    const [ chat, setChat ] = useState([]);\n    const [ roomName, setRoomName ] = useState('');\n    const [ roomID, setRoomID ] = useState('');\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n\nconst Send = (e) => {\n    e.preventDefault();\n    const { username, message } = state\n    // socket.emit('chat message', { username, message })\n    setState({ message: '', username: username})\n    setChat([...chat, {username, message}])\n    console.log('CHAT AFTER SEND', chat);\n}\n\nconst RenderChat = () => {\n    return Object.keys(state).map((chatty) => {\n        <li key={chatty}>\n            <h3>\n                {state.username}: <span> {state.message} </span>\n            </h3>\n        </li>\n    })\n}\n\nuseEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n        token: token,\n    })\n        .then(response => {\n        setUserData(response.data);\n        setState({username: response.data.username})\n        \n});\n}, []);\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n    setRoomName(location.name);\n    setRoomID(location.room)\n\n    socket.emit('join', { username: state.username, roomName, roomID }, () => {\n\n    });\n\n    return () => {\n        socket.emit('disconnected', { username: state.username });\n\n        socket.off();\n    }\n\n}, [ENDPOINT, location])\n\nuseEffect(() => {\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n    socket.on('message', (message) => {\n\n    })\n})\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!userData) {\n    return <p> Loading... </p>\n}\n\n    if (!token) {\n    return <Redirect to='/' />\n}\n\n    return (\n        <>\n            <div className='multibody' >\n                <div>\n                    <h1> HELLOOOO?? </h1>\n                        {/* {chat.map(msg => {\n                            <li>\n                                <h3>\n                                    {msg.username} <span> {msg.message} </span>\n                                </h3>\n                            </li>\n                        })} */}\n                        {RenderChat()}\n                </div>\n\n                <form className='form' onSubmit={Send}>\n\n                <input required\n                    className='input'  \n                    type='text'\n                    autoComplete='off'\n                    id=''\n                    placeholder='What would you like to say?'\n                    value={state.message}\n                    onChange={e => { setState({...state, message: e.target.value})}}\n                    >\n                </input>\n                <button className='bt'>\n                    Send\n                </button>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}