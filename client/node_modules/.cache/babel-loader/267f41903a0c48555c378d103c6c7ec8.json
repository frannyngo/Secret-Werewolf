{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [roomName, setRoomName] = useState('');\n  const [roomID, setRoomID] = useState('');\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket']\n  });\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    setRoomName(location.name);\n    setRoomID(location.room);\n    setState({\n      username: state.username\n    });\n    localhost(location);\n    socket.emit('join', {\n      username: state.username,\n      roomName,\n      roomID\n    }, () => {});\n    return () => {\n      socket.emit('disconnected', {\n        username: state.username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location]);\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket']\n    });\n    socket.on('message', message => {\n      setChat([...chat, message]);\n    });\n  }, [chat]);\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Multiplayer, \"z7XP6oxMoraojSSEcM8RUTDEOBE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","Multiplayer","token","roomName","setRoomName","roomID","setRoomID","ENDPOINT","location","socket","transports","name","room","setState","username","state","localhost","emit","off","on","message","setChat","chat","userData"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEM,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,QAAQ,GAAG,uBAAjB;AAEA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGX,EAAE,CAACS,QAAD,EAAW;AAACG,IAAAA,UAAU,EAAE,CAAC,WAAD;AAAb,GAAX,CAAjB;AAKJV,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMS,MAAM,GAAGX,EAAE,CAACS,QAAD,EAAW;AAACG,MAAAA,UAAU,EAAE,CAAC,WAAD;AAAb,KAAX,CAAjB;AAEAN,IAAAA,WAAW,CAACI,QAAQ,CAACG,IAAV,CAAX;AACAL,IAAAA,SAAS,CAACE,QAAQ,CAACI,IAAV,CAAT;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,QAAQ,EAAEC,KAAK,CAACD;AAAlB,KAAD,CAAR;AAEAE,IAAAA,SAAS,CAACR,QAAD,CAAT;AAEAC,IAAAA,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAoB;AAAEH,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAlB;AAA4BX,MAAAA,QAA5B;AAAsCE,MAAAA;AAAtC,KAApB,EAAoE,MAAM,CAEzE,CAFD;AAIA,WAAO,MAAM;AACTI,MAAAA,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4B;AAAEH,QAAAA,QAAQ,EAAEC,KAAK,CAACD;AAAlB,OAA5B;AAEAL,MAAAA,MAAM,CAACS,GAAP;AACH,KAJD;AAMH,GApBQ,EAoBN,CAACX,QAAD,EAAWC,QAAX,CApBM,CAAT;AAsBAR,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMS,MAAM,GAAGX,EAAE,CAACS,QAAD,EAAW;AAACG,MAAAA,UAAU,EAAE,CAAC,WAAD;AAAb,KAAX,CAAjB;AACAD,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAa;AAC9BC,MAAAA,OAAO,CAAC,CAAC,GAAGC,IAAJ,EAAUF,OAAV,CAAD,CAAP;AACH,KAFD;AAGH,GANQ,EAMN,CAACE,IAAD,CANM,CAAT;;AAUI,MAAI,CAACd,QAAQ,CAACG,IAAd,EAAoB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACY,QAAL,EAAe;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEG,MAAI,CAACrB,KAAL,EAAY;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAIG,sBACI,qCADJ;AAKH,CA9DD;;GAAMD,W;UAKeJ,W;;;KALfI,W;AAgEN,eAAeA,WAAf","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nconst Multiplayer = ({ token }) => {\n    const [ roomName, setRoomName ] = useState('');\n    const [ roomID, setRoomID ] = useState('');\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n\n\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\n    setRoomName(location.name);\n    setRoomID(location.room)\n    setState({ username: state.username })\n\n    localhost(location);\n\n    socket.emit('join', { username: state.username, roomName, roomID }, () => {\n\n    });\n\n    return () => {\n        socket.emit('disconnected', { username: state.username });\n\n        socket.off();\n    }\n\n}, [ENDPOINT, location]);\n\nuseEffect(() => {\n\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n    socket.on('message', (message) => {\n        setChat([...chat, message])\n    })\n}, [chat]);\n\n\n \n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!userData) {\n    return <p> Loading... </p>\n}\n\n    if (!token) {\n    return <Redirect to='/' />\n}\n\n\n\n    return (\n        <>\n\n        </>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}