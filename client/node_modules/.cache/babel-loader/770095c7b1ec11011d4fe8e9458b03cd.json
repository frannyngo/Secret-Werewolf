{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = ({\n  token,\n  inGame,\n  setInGame,\n  setWin,\n  setUserKills,\n  userKills\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [nightPhase, setNightPhase] = useState(false);\n  const [morningPhase, setMorningPhase] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [userKilled, setUserKilled] = useState(false);\n  const [playersRemaining, setPlayersRemaining] = useState(7);\n  const [witch, setWitch] = useState(0);\n  const [alive, setAlive] = useState(true);\n  const [consoleLog, setConsoleLog] = useState();\n  const [logVotes, setLogVotes] = useState();\n  let history = useHistory();\n\n  const Start = () => {\n    setInGame(true);\n    setMorningPhase(true);\n    setNightPhase(false);\n    setDisabled(false);\n    setUserKilled(false);\n    setWitch(0);\n    setAlive(true);\n    setConsoleLog();\n    setPlayersRemaining(7);\n    setUserKills(0);\n    setConsoleLog();\n    setLogVotes();\n    setWin(null);\n  };\n\n  const Select = e => {\n    const selected = e.target.id;\n    let cpuVotes = playersRemaining - 1;\n\n    if (witch === 0) {\n      let healer = Math.floor(Math.random() * playersRemaining + 1);\n      setWitch(healer);\n    }\n\n    if (playersRemaining >= 3) {\n      if (morningPhase === true) {\n        let userVote = parseInt(selected, 10);\n        let votes = [];\n\n        for (let i = 0; i <= cpuVotes; i++) {\n          let random = Math.floor(Math.random() * playersRemaining + 1);\n          votes.push(random); // console.log(`player ${i} has voted to hang player ${random}`);\n        }\n\n        votes.push(userVote);\n        setLogVotes(votes);\n        console.log(`You have voted to hang player ${userVote}`);\n        let highestReoccurence = 1;\n        let counter = 0;\n        let mostVotes = [];\n\n        for (let i = 0; i <= votes.length; i++) {\n          for (let j = i; j < votes.length; j++) {\n            if (votes[i] === votes[j]) {\n              counter++;\n            } else if (highestReoccurence < counter) {\n              highestReoccurence = counter;\n              mostVotes = votes[i];\n            }\n          }\n\n          counter = 0;\n        }\n\n        if (mostVotes === 0) {\n          console.log('You have been caught');\n          setConsoleLog('You have been caught');\n          setInGame(false);\n          setWin(false);\n          history.push('/postgame');\n        } else {\n          const hanged = document.getElementById(mostVotes);\n          const pl1 = document.getElementById(1);\n          const pl2 = document.getElementById(2);\n          const pl3 = document.getElementById(3);\n          const pl4 = document.getElementById(4);\n          const pl5 = document.getElementById(5);\n          const pl6 = document.getElementById(6);\n          console.log('hanged players disabled boolean', hanged.disabled);\n          hanged.disabled = true;\n          hanged.value = false;\n          console.log('player1: ', pl1.disabled);\n          console.log('player2: ', pl2.disabled);\n          console.log('player3: ', pl3.disabled);\n          console.log('player4: ', pl4.disabled);\n          console.log('player5: ', pl5.disabled);\n          console.log('player6: ', pl6.disabled);\n          console.log(`Player ${mostVotes} has been voted to be hanged`);\n          setConsoleLog(`Player ${mostVotes} has been hanged`);\n        }\n\n        highestReoccurence = 1;\n        counter = 0;\n        mostVotes = [];\n        votes = [];\n        setPlayersRemaining(playersRemaining - 1);\n        setMorningPhase(false);\n        setNightPhase(true);\n      } else if (nightPhase === true) {\n        const eliminate = e.target.id;\n        const userEliminates = parseInt(eliminate, 10); // const theWitch = document.getElementById(witch)\n\n        const playerEliminated = document.getElementById(userEliminates);\n        const witchProtects = Math.floor(Math.random() * playersRemaining); // console.log(theWitch.value);\n        // if (theWitch.value === false) {\n        //     playerEliminated.disabled = true;\n        //     playerEliminated.value = false;\n        //     setPlayersRemaining(playersRemaining - 1);\n        //     setUserKills(userKills + 1);\n        //     console.log(`The werewolf eliminated player ${userEliminates}`);\n        //     setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n        // }\n        // else if (theWitch.value === true) {\n\n        if (userEliminates === witchProtects) {\n          console.log(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n          setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n        } else if (userEliminates !== witchProtects) {\n          playerEliminated.disabled = true;\n          playerEliminated.value = false;\n          setPlayersRemaining(playersRemaining - 1);\n          setUserKills(userKills + 1);\n          console.log(`The werewolf eliminated player ${userEliminates}`);\n          setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n        } else {\n          alert('somethings wrong with your night-phase, if witch is alive statements');\n        } // }\n        // else {\n        //     alert('somethings wrong wtih if witch value === true/false');\n        // }\n\n\n        setLogVotes();\n        setMorningPhase(true);\n        setNightPhase(false);\n      } else {\n        alert('Something wrong with phases...');\n      }\n    } else if (playersRemaining === 1) {\n      alert('Congratulations, you win!');\n      setInGame(false);\n      setWin(true);\n      history.push('/postgame');\n    } else {\n      alert('Something is wrong with the game..');\n    }\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []);\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !inGame ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: Start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Players Remaining: \", playersRemaining, \" \\u2003 Kills: \", userKills, \" \\u2003 Witch: \", witch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"console\",\n        children: consoleLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"votes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Votes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), logVotes ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: logVotes.map(v => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Player: \", v]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No votes yet...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), !morningPhase ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"NIGHT-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Who would you like to eliminate?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MORNING-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vote who you would like to \\\"frame\\\" as the \\\"werewolf\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 7,\n        value: userKilled,\n        disabled: disabled,\n        children: userData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 1,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 2,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 3,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 4,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 5,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 6,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Play, \"cO3SnpJWAVvi//qBbKm7a30pWkE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js"],"names":["useEffect","useState","axios","useHistory","Redirect","Play","token","inGame","setInGame","setWin","setUserKills","userKills","userData","setUserData","nightPhase","setNightPhase","morningPhase","setMorningPhase","disabled","setDisabled","userKilled","setUserKilled","playersRemaining","setPlayersRemaining","witch","setWitch","alive","setAlive","consoleLog","setConsoleLog","logVotes","setLogVotes","history","Start","Select","e","selected","target","id","cpuVotes","healer","Math","floor","random","userVote","parseInt","votes","i","push","console","log","highestReoccurence","counter","mostVotes","length","j","hanged","document","getElementById","pl1","pl2","pl3","pl4","pl5","pl6","value","eliminate","userEliminates","playerEliminated","witchProtects","alert","post","then","response","data","map","v","username"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, Redirect } from \"react-router-dom\";\n\n\nconst Play = ({ token, inGame, setInGame, setWin, setUserKills, userKills }) => {\n\n    const [ userData, setUserData ] = useState();\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(false);\n    const [ disabled, setDisabled ] = useState(false);\n    const [ userKilled, setUserKilled ] = useState(false);\n    const [ playersRemaining, setPlayersRemaining ] = useState(7);\n    const [ witch, setWitch ] = useState(0);\n    const [ alive, setAlive ] = useState(true);\n    const [ consoleLog, setConsoleLog ] = useState();\n    const [ logVotes, setLogVotes ] = useState();\n    let history = useHistory();\n\n    const Start = () => {\n        setInGame(true);\n        setMorningPhase(true);\n        setNightPhase(false); \n        setDisabled(false);\n        setUserKilled(false);\n        setWitch(0);\n        setAlive(true);\n        setConsoleLog();\n        setPlayersRemaining(7);\n        setUserKills(0);\n        setConsoleLog();\n        setLogVotes();\n        setWin(null);\n    }\n\n    const Select = (e) => {\n        const selected = e.target.id;\n        let cpuVotes = playersRemaining - 1;\n\n        if (witch === 0) {\n            let healer = Math.floor((Math.random() * playersRemaining + 1));\n            setWitch(healer);\n        }\n\n        if ( playersRemaining >= 3 ) {\n            if ( morningPhase === true ) { \n                let userVote = parseInt(selected, 10);\n                let votes = []; \n\n                for (let i = 0; i <= cpuVotes; i++) {\n                    let random = Math.floor((Math.random() * playersRemaining + 1));\n                    votes.push(random);\n                    // console.log(`player ${i} has voted to hang player ${random}`);\n                }\n                votes.push(userVote);\n                setLogVotes(votes);\n                console.log(`You have voted to hang player ${userVote}`);                \n                \n                let highestReoccurence = 1;\n                let counter = 0;\n                let mostVotes = [];\n\n                for (let i = 0; i <= votes.length; i++) {\n                    for (let j = i; j <votes.length; j++) {\n                        if (votes[i] === votes[j]) {\n                            counter++;\n                        } else if ( highestReoccurence < counter) {\n                            highestReoccurence = counter\n                            mostVotes = votes[i];\n                        }\n                    }\n                    counter = 0;\n                }\n                    if (mostVotes === 0) {\n                        console.log('You have been caught');\n                        setConsoleLog('You have been caught')\n                        setInGame(false);\n                        setWin(false);\n                        history.push('/postgame');\n                    } \n                    else {\n                        const hanged = document.getElementById(mostVotes); \n                        const pl1 = document.getElementById(1); \n                        const pl2 = document.getElementById(2); \n                        const pl3 = document.getElementById(3); \n                        const pl4 = document.getElementById(4); \n                        const pl5 = document.getElementById(5); \n                        const pl6 = document.getElementById(6); \n\n                        console.log('hanged players disabled boolean', hanged.disabled);\n\n                        hanged.disabled = true;\n                        hanged.value = false;\n\n                        console.log('player1: ', pl1.disabled)\n                        console.log('player2: ', pl2.disabled)\n                        console.log('player3: ', pl3.disabled)\n                        console.log('player4: ', pl4.disabled)\n                        console.log('player5: ', pl5.disabled)\n                        console.log('player6: ', pl6.disabled)\n\n                        console.log(`Player ${mostVotes} has been voted to be hanged`);\n                        setConsoleLog(`Player ${mostVotes} has been hanged`);\n                    }\n                \n                highestReoccurence = 1\n                counter = 0;\n                mostVotes = [];\n                votes = [];\n                setPlayersRemaining(playersRemaining - 1)\n                setMorningPhase(false);\n                setNightPhase(true);\n            }\n            else if (nightPhase === true) {\n                const eliminate = e.target.id\n                const userEliminates = parseInt(eliminate, 10);\n                // const theWitch = document.getElementById(witch)\n                const playerEliminated = document.getElementById(userEliminates);\n                const witchProtects = Math.floor((Math.random() * playersRemaining));\n                \n                // console.log(theWitch.value);\n                // if (theWitch.value === false) {\n                //     playerEliminated.disabled = true;\n                //     playerEliminated.value = false;\n                //     setPlayersRemaining(playersRemaining - 1);\n                //     setUserKills(userKills + 1);\n                //     console.log(`The werewolf eliminated player ${userEliminates}`);\n                //     setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n                // }\n                // else if (theWitch.value === true) {\n                    if (userEliminates === witchProtects) {\n                        console.log(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                        setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                    }\n                    else if (userEliminates !== witchProtects) {\n                        playerEliminated.disabled = true;\n                        playerEliminated.value = false;\n                        setPlayersRemaining(playersRemaining - 1);\n                        setUserKills(userKills + 1);\n                        console.log(`The werewolf eliminated player ${userEliminates}`);\n                        setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n                    } \n                    else {\n                        alert('somethings wrong with your night-phase, if witch is alive statements');\n                    }\n                // }\n                // else {\n                //     alert('somethings wrong wtih if witch value === true/false');\n                // }\n\n                setLogVotes();\n                setMorningPhase(true);\n                setNightPhase(false);\n            }\n            else {\n                alert('Something wrong with phases...');\n            }\n        }\n        else if (playersRemaining === 1) {\n            alert('Congratulations, you win!');\n            setInGame(false);\n            setWin(true);\n            history.push('/postgame');\n        }\n        else {\n            alert('Something is wrong with the game..');\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n        });\n    }, [])\n\n    if (!token) {\n        return <Redirect to='/' />\n    }\n\n    return(\n        <>\n            { !inGame?\n                <button \n                    className='start-button'\n                    onClick={Start}\n                    >\n                    Start\n                </button>\n            : \n            <>  \n                <h2>\n                    Players Remaining: {playersRemaining} &emsp; Kills: {userKills} &emsp; Witch: {witch}\n                </h2>\n                <h5 className=\"console\"\n                    >\n                    {consoleLog}\n                </h5>\n                <div className='votes'>\n                    <h3>\n                        Votes:\n                    </h3>\n                { logVotes?   \n                <>  \n                    {logVotes.map(v => (\n                        <p>\n                            Player: {v}\n                        </p>            \n                    ))\n                    }   \n                </>\n                :\n                    <p>\n                        No votes yet...\n                    </p>\n                }\n                </div>\n\n                { !morningPhase? \n                <>\n                    <h1> \n                        NIGHT-PHASE\n                    </h1>\n                    <h2>\n                        Who would you like to eliminate?\n                    </h2>\n                </>\n                :\n                <>\n                    <h1>\n                        MORNING-PHASE\n                    </h1>\n                    <h2>\n                        Vote who you would like to \"frame\" as the \"werewolf\"\n                    </h2>\n                </>\n                }\n                <button className='player'\n                    id={7}\n                    value={userKilled}\n                    disabled={disabled}\n                    > \n                    {userData.username}\n                </button>\n                <button \n                    className='player'\n                    id={1}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU1\n                </button>\n                <button \n                    className='player'\n                    id={2}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU2\n                </button>\n                <button \n                    className='player'\n                    id={3}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU3\n                </button>\n                <button \n                    className='player'\n                    id={4}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU4\n                </button> \n                <button \n                    className='player'\n                    id={5}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU5\n                </button>\n                <button \n                className='player'\n                id={6}\n                disabled={disabled}\n                onClick={Select}\n                value={alive}\n                >\n                Morning-CPU6\n                </button>\n            </>     \n            }\n            \n        \n        </>\n    );\n}\n\n\nexport default Play;"]},"metadata":{},"sourceType":"module"}