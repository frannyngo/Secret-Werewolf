{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = ({\n  token\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [inGame, setInGame] = useState(false);\n  const [nightPhase, setNightPhase] = useState(false);\n  const [morningPhase, setMorningPhase] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [userKilled, setUserKilled] = useState(false);\n  const [playersRemaining, setPlayersRemaining] = useState(6);\n  const [userKills, setUserKills] = useState(0);\n  const [witch, setWitch] = useState(0);\n  const [alive, setAlive] = useState(true);\n  const [consoleLog, setConsoleLog] = useState();\n  const [logVotes, setLogVotes] = useState();\n\n  const Start = () => {\n    setInGame(true);\n    setMorningPhase(true);\n    setNightPhase(false);\n    setDisabled(false);\n    setUserKilled(false);\n    setWitch(0);\n    setAlive(true);\n    setConsoleLog();\n    setPlayersRemaining(6);\n    setUserKills(0);\n    setConsoleLog();\n    setLogVotes();\n  };\n\n  const Select = e => {\n    const selected = e.target.id;\n\n    if (witch === 0) {\n      let healer = Math.floor(Math.random() * playersRemaining);\n      setWitch(healer);\n    }\n\n    if (userKilled === false || playersRemaining >= 1) {\n      if (morningPhase === true) {\n        let userVote = parseInt(selected, 10);\n        let votes = [];\n\n        for (let i = 0; i <= playersRemaining - 1; i++) {\n          let random = Math.floor(Math.random() * playersRemaining);\n          votes.push(random);\n          console.log(`player ${i} has voted to hang player ${random}`);\n        }\n\n        votes.push(userVote);\n        console.log(`You have voted to hang player ${userVote}`);\n        let highestReoccurence = 1;\n        let counter = 0;\n        let mostVotes = [];\n\n        for (let i = 0; i <= votes.length; i++) {\n          for (let j = i; j < votes.length; j++) {\n            if (votes[i] === votes[j]) {\n              counter++;\n            } else if (highestReoccurence < counter) {\n              highestReoccurence = counter;\n              mostVotes = votes[i];\n            }\n          }\n\n          counter = 0;\n        }\n\n        if (mostVotes === 0) {\n          console.log('You have been caught');\n          alert('You have been caught!');\n          Start();\n        } else {\n          const hanged = document.getElementById(mostVotes);\n          hanged.disabled = true;\n          console.log(`Player ${mostVotes} has been voted to be hanged`);\n          setConsoleLog(`Player ${mostVotes} has been hanged`);\n        }\n\n        highestReoccurence = 1;\n        counter = 0;\n        mostVotes = [];\n        votes = [];\n        setPlayersRemaining(playersRemaining - 1);\n        setMorningPhase(false);\n        setNightPhase(true);\n      } else if (nightPhase === true) {\n        const eliminate = e.target.id;\n        const userEliminates = parseInt(eliminate, 10);\n        const playerEliminated = document.getElementById(userEliminates);\n        const witchProtects = Math.floor(Math.random() * playersRemaining);\n\n        if (userEliminates === witchProtects) {\n          console.log(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n          setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n        } else if (userEliminates !== witchProtects) {\n          console.log(`eliminate attempted, player: ${userEliminates}`);\n          playerEliminated.disabled = true;\n          setPlayersRemaining(playersRemaining - 1);\n          setUserKills(userKills + 1);\n          console.log(`The werewolf eliminated player ${userEliminates}`);\n          setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n        } else {\n          alert('somethings wrong with your night-phase, eliminate/witch statements');\n        }\n\n        setMorningPhase(true);\n        setNightPhase(false);\n      } else {\n        alert('Something wrong with phases...');\n      }\n    } else if (playersRemaining === 0) {\n      alert('Congratulations, you win!');\n      Start();\n    } else if (userKilled === true) {\n      alert('You lost...');\n      Start();\n    } else {\n      alert('Something is wrong with the game..');\n    }\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !inGame ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: Start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"console\",\n        children: consoleLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), !morningPhase ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"NIGHT-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Who would you like to eliminate?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MORNING-PHASE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vote who you would like to \\\"frame\\\" as the \\\"werewolf\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player\",\n        id: 0,\n        value: userKilled,\n        children: [userData.username, \" players remaining: \", playersRemaining, \" kills: \", userKills, \" witch: \", witch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 1,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 2,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 3,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 4,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 5,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"player\",\n        id: 6,\n        disabled: disabled,\n        onClick: Select,\n        value: alive,\n        children: \"Morning-CPU6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Play, \"ec8a0LF4lbBjQR+m2V+eAO6xL1A=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js"],"names":["useEffect","useState","axios","Play","token","userData","setUserData","inGame","setInGame","nightPhase","setNightPhase","morningPhase","setMorningPhase","disabled","setDisabled","userKilled","setUserKilled","playersRemaining","setPlayersRemaining","userKills","setUserKills","witch","setWitch","alive","setAlive","consoleLog","setConsoleLog","logVotes","setLogVotes","Start","Select","e","selected","target","id","healer","Math","floor","random","userVote","parseInt","votes","i","push","console","log","highestReoccurence","counter","mostVotes","length","j","alert","hanged","document","getElementById","eliminate","userEliminates","playerEliminated","witchProtects","post","then","response","data","username"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACxB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAM,CAAEM,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEQ,UAAF,EAAcC,aAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAEU,YAAF,EAAgBC,eAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEY,QAAF,EAAYC,WAAZ,IAA2Bb,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAAEc,UAAF,EAAcC,aAAd,IAA+Bf,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAAEgB,gBAAF,EAAoBC,mBAApB,IAA2CjB,QAAQ,CAAC,CAAD,CAAzD;AACA,QAAM,CAAEkB,SAAF,EAAaC,YAAb,IAA6BnB,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAAEoB,KAAF,EAASC,QAAT,IAAqBrB,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAAEsB,KAAF,EAASC,QAAT,IAAqBvB,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAAEwB,UAAF,EAAcC,aAAd,IAA+BzB,QAAQ,EAA7C;AACA,QAAM,CAAE0B,QAAF,EAAYC,WAAZ,IAA2B3B,QAAQ,EAAzC;;AAGA,QAAM4B,KAAK,GAAG,MAAM;AAChBrB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,aAAa;AACbR,IAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACAE,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAM,IAAAA,aAAa;AACbE,IAAAA,WAAW;AACd,GAbD;;AAeA,QAAME,MAAM,GAAIC,CAAD,IAAO;AAClB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,EAA1B;;AAEA,QAAIb,KAAK,KAAK,CAAd,EAAiB;AACb,UAAIc,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAA5B,CAAb;AACAK,MAAAA,QAAQ,CAACa,MAAD,CAAR;AACH;;AAED,QAAKpB,UAAU,KAAK,KAAf,IAAwBE,gBAAgB,IAAI,CAAjD,EAAqD;AACjD,UAAKN,YAAY,KAAK,IAAtB,EAA6B;AACzB,YAAI4B,QAAQ,GAAGC,QAAQ,CAACR,QAAD,EAAW,EAAX,CAAvB;AACA,YAAIS,KAAK,GAAG,EAAZ;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIzB,gBAAgB,GAAG,CAAxC,EAA2CyB,CAAC,EAA5C,EAAgD;AAC5C,cAAIJ,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAA5B,CAAb;AACAwB,UAAAA,KAAK,CAACE,IAAN,CAAWL,MAAX;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASH,CAAE,6BAA4BJ,MAAO,EAA3D;AACH;;AACDG,QAAAA,KAAK,CAACE,IAAN,CAAWJ,QAAX;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCN,QAAS,EAAtD;AAEA,YAAIO,kBAAkB,GAAG,CAAzB;AACA,YAAIC,OAAO,GAAG,CAAd;AACA,YAAIC,SAAS,GAAG,EAAhB;;AAEA,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,KAAK,CAACQ,MAA3B,EAAmCP,CAAC,EAApC,EAAwC;AACpC,eAAK,IAAIQ,CAAC,GAAGR,CAAb,EAAgBQ,CAAC,GAAET,KAAK,CAACQ,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,gBAAIT,KAAK,CAACC,CAAD,CAAL,KAAaD,KAAK,CAACS,CAAD,CAAtB,EAA2B;AACvBH,cAAAA,OAAO;AACV,aAFD,MAEO,IAAKD,kBAAkB,GAAGC,OAA1B,EAAmC;AACtCD,cAAAA,kBAAkB,GAAGC,OAArB;AACAC,cAAAA,SAAS,GAAGP,KAAK,CAACC,CAAD,CAAjB;AACH;AACJ;;AACDK,UAAAA,OAAO,GAAG,CAAV;AACH;;AACG,YAAIC,SAAS,KAAK,CAAlB,EAAqB;AACjBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAM,UAAAA,KAAK,CAAC,uBAAD,CAAL;AACAtB,UAAAA,KAAK;AACR,SAJD,MAKK;AACD,gBAAMuB,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBN,SAAxB,CAAf;AACAI,UAAAA,MAAM,CAACvC,QAAP,GAAkB,IAAlB;AACA+B,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASG,SAAU,8BAAhC;AACAtB,UAAAA,aAAa,CAAE,UAASsB,SAAU,kBAArB,CAAb;AACH;;AAELF,QAAAA,kBAAkB,GAAG,CAArB;AACAC,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,SAAS,GAAG,EAAZ;AACAP,QAAAA,KAAK,GAAG,EAAR;AACAvB,QAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACAL,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OA9CD,MA+CK,IAAID,UAAU,KAAK,IAAnB,EAAwB;AACzB,cAAM8C,SAAS,GAAGxB,CAAC,CAACE,MAAF,CAASC,EAA3B;AACA,cAAMsB,cAAc,GAAGhB,QAAQ,CAACe,SAAD,EAAY,EAAZ,CAA/B;AACA,cAAME,gBAAgB,GAAGJ,QAAQ,CAACC,cAAT,CAAwBE,cAAxB,CAAzB;AACA,cAAME,aAAa,GAAGtB,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBrB,gBAA5B,CAAtB;;AAEA,YAAIuC,cAAc,KAAKE,aAAvB,EAAsC;AAClCd,UAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0Ba,aAAc,0BAArD;AACAhC,UAAAA,aAAa,CAAE,2BAA0BgC,aAAc,0BAA1C,CAAb;AACH,SAHD,MAIK,IAAIF,cAAc,KAAKE,aAAvB,EAAsC;AACvCd,UAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BW,cAAe,EAA3D;AACAC,UAAAA,gBAAgB,CAAC5C,QAAjB,GAA4B,IAA5B;AACAK,UAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACAG,UAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAyB,UAAAA,OAAO,CAACC,GAAR,CAAa,kCAAiCW,cAAe,EAA7D;AACA9B,UAAAA,aAAa,CAAE,kCAAiC8B,cAAe,EAAlD,CAAb;AACH,SAPI,MAQA;AACDL,UAAAA,KAAK,CAAC,oEAAD,CAAL;AACH;;AAEDvC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAxBI,MAyBA;AACDyC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,KA5ED,MA6EK,IAAIlC,gBAAgB,KAAK,CAAzB,EAA4B;AAC7BkC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACAtB,MAAAA,KAAK;AACR,KAHI,MAIA,IAAId,UAAU,KAAK,IAAnB,EAAyB;AAC1BoC,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAtB,MAAAA,KAAK;AACR,KAHI,MAIA;AACDsB,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,GAhGD;;AAkGAnD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACyD,IAAN,CAAW,mCAAX,EAAgD;AAC5CvD,MAAAA,KAAK,EAAEA;AADqC,KAAhD,EAGCwD,IAHD,CAGMC,QAAQ,IAAI;AACdvD,MAAAA,WAAW,CAACuD,QAAQ,CAACC,IAAV,CAAX;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACI;AAAA,cACM,CAACvD,MAAD,gBACE;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,OAAO,EAAEsB,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAQF;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBAEKJ;AAFL;AAAA;AAAA;AAAA;AAAA,cADJ,EAMM,CAACd,YAAD,gBACF;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADE,gBAUF;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBAhBJ,eAyBI;AAAI,QAAA,SAAS,EAAC,QAAd;AACI,QAAA,EAAE,EAAE,CADR;AAEI,QAAA,KAAK,EAAEI,UAFX;AAAA,mBAIKV,QAAQ,CAAC0D,QAJd,0BAI4C9C,gBAJ5C,cAIsEE,SAJtE,cAIyFE,KAJzF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA+BI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,QAAQ,EAAER,QAHd;AAII,QAAA,OAAO,EAAEiB,MAJb;AAKI,QAAA,KAAK,EAAEP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ,eAwCI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,QAAQ,EAAEV,QAHd;AAII,QAAA,OAAO,EAAEiB,MAJb;AAKI,QAAA,KAAK,EAAEP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCJ,eAiDI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,QAAQ,EAAEV,QAHd;AAII,QAAA,OAAO,EAAEiB,MAJb;AAKI,QAAA,KAAK,EAAEP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDJ,eA0DI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,QAAQ,EAAEV,QAHd;AAII,QAAA,OAAO,EAAEiB,MAJb;AAKI,QAAA,KAAK,EAAEP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DJ,eAmEI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,EAAE,EAAE,CAFR;AAGI,QAAA,QAAQ,EAAEV,QAHd;AAII,QAAA,OAAO,EAAEiB,MAJb;AAKI,QAAA,KAAK,EAAEP,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnEJ,eA4EI;AACA,QAAA,SAAS,EAAC,QADV;AAEA,QAAA,EAAE,EAAE,CAFJ;AAGA,QAAA,QAAQ,EAAEV,QAHV;AAIA,QAAA,OAAO,EAAEiB,MAJT;AAKA,QAAA,KAAK,EAAEP,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EJ;AAAA;AATJ,mBADJ;AAqGH,CA/OD;;GAAMpB,I;;KAAAA,I;AAkPN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Play = ({ token }) => {\n    const [ userData, setUserData ] = useState();\n    const [ inGame, setInGame ] = useState(false);\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(false);\n    const [ disabled, setDisabled] = useState(false);\n    const [ userKilled, setUserKilled] = useState(false);\n    const [ playersRemaining, setPlayersRemaining] = useState(6);\n    const [ userKills, setUserKills] = useState(0);\n    const [ witch, setWitch] = useState(0);\n    const [ alive, setAlive] = useState(true);\n    const [ consoleLog, setConsoleLog] = useState();\n    const [ logVotes, setLogVotes] = useState();\n\n   \n    const Start = () => {\n        setInGame(true);\n        setMorningPhase(true);\n        setNightPhase(false); \n        setDisabled(false);\n        setUserKilled(false);\n        setWitch(0);\n        setAlive(true);\n        setConsoleLog();\n        setPlayersRemaining(6);\n        setUserKills(0);\n        setConsoleLog();\n        setLogVotes();\n    }\n\n    const Select = (e) => {\n        const selected = e.target.id;\n\n        if (witch === 0) {\n            let healer = Math.floor((Math.random() * playersRemaining));\n            setWitch(healer);\n        }\n\n        if ( userKilled === false || playersRemaining >= 1 ) {\n            if ( morningPhase === true ) { \n                let userVote = parseInt(selected, 10);\n                let votes = []; \n\n                for (let i = 0; i <= playersRemaining - 1; i++) {\n                    let random = Math.floor((Math.random() * playersRemaining));\n                    votes.push(random);\n                    console.log(`player ${i} has voted to hang player ${random}`);\n                }\n                votes.push(userVote);\n                console.log(`You have voted to hang player ${userVote}`);                \n                \n                let highestReoccurence = 1;\n                let counter = 0;\n                let mostVotes = [];\n\n                for (let i = 0; i <= votes.length; i++) {\n                    for (let j = i; j <votes.length; j++) {\n                        if (votes[i] === votes[j]) {\n                            counter++;\n                        } else if ( highestReoccurence < counter) {\n                            highestReoccurence = counter\n                            mostVotes = votes[i];\n                        }\n                    }\n                    counter = 0;\n                }\n                    if (mostVotes === 0) {\n                        console.log('You have been caught');\n                        alert('You have been caught!');\n                        Start();\n                    } \n                    else {\n                        const hanged = document.getElementById(mostVotes); \n                        hanged.disabled = true;\n                        console.log(`Player ${mostVotes} has been voted to be hanged`);\n                        setConsoleLog(`Player ${mostVotes} has been hanged`);\n                    }\n                \n                highestReoccurence = 1\n                counter = 0;\n                mostVotes = [];\n                votes = [];\n                setPlayersRemaining(playersRemaining - 1)\n                setMorningPhase(false);\n                setNightPhase(true);\n            }\n            else if (nightPhase === true){\n                const eliminate = e.target.id\n                const userEliminates = parseInt(eliminate, 10);\n                const playerEliminated = document.getElementById(userEliminates);\n                const witchProtects = Math.floor((Math.random() * playersRemaining));\n\n                if (userEliminates === witchProtects) {\n                    console.log(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                    setConsoleLog(`Witch has healed player ${witchProtects} from a werewolf attack!`);\n                }\n                else if (userEliminates !== witchProtects) {\n                    console.log(`eliminate attempted, player: ${userEliminates}`)\n                    playerEliminated.disabled = true;\n                    setPlayersRemaining(playersRemaining - 1);\n                    setUserKills(userKills + 1);\n                    console.log(`The werewolf eliminated player ${userEliminates}`);\n                    setConsoleLog(`The werewolf eliminated player ${userEliminates}`);\n                } \n                else {\n                    alert('somethings wrong with your night-phase, eliminate/witch statements');\n                }\n\n                setMorningPhase(true);\n                setNightPhase(false);\n            }\n            else {\n                alert('Something wrong with phases...');\n            }\n        }\n        else if (playersRemaining === 0) {\n            alert('Congratulations, you win!');\n            Start();\n        }\n        else if (userKilled === true) {\n            alert('You lost...');\n            Start();\n        }\n        else {\n            alert('Something is wrong with the game..');\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n        });\n    }, [])\n\n\n    return(\n        <>\n            { !inGame?\n                <button \n                    className='start-button'\n                    onClick={Start}\n                    >\n                    Start\n                </button>\n            : \n            <>  \n                <h5 className=\"console\"\n                    >\n                    {consoleLog}\n                </h5>\n\n                { !morningPhase? \n                <>\n                    <h1> \n                        NIGHT-PHASE\n                    </h1>\n                    <h2>\n                        Who would you like to eliminate?\n                    </h2>\n                </>\n                :\n                <>\n                    <h1>\n                        MORNING-PHASE\n                    </h1>\n                    <h2>\n                        Vote who you would like to \"frame\" as the \"werewolf\"\n                    </h2>\n                </>\n                }\n                <h3 className='player'\n                    id={0}\n                    value={userKilled}\n                    > \n                    {userData.username} players remaining: {playersRemaining} kills: {userKills} witch: {witch}\n                </h3>\n                <button \n                    className='player'\n                    id={1}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU1\n                </button>\n                <button \n                    className='player'\n                    id={2}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU2\n                </button>\n                <button \n                    className='player'\n                    id={3}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU3\n                </button>\n                <button \n                    className='player'\n                    id={4}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU4\n                </button> \n                <button \n                    className='player'\n                    id={5}\n                    disabled={disabled}\n                    onClick={Select}\n                    value={alive}\n                    >\n                    Morning-CPU5\n                </button>\n                <button \n                className='player'\n                id={6}\n                disabled={disabled}\n                onClick={Select}\n                value={alive}\n                >\n                Morning-CPU6\n                </button>\n            </>     \n            }\n            \n        \n        </>\n    );\n}\n\n\nexport default Play;"]},"metadata":{},"sourceType":"module"}