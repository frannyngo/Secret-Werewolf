{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [message, setMessage] = useState([{\n    user: '',\n    text: ''\n  }]);\n  const [messages, setMessages] = useState([{\n    user: '',\n    text: ''\n  }]);\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket'],\n    upgrade: false\n  });\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', {\n        user: username,\n        text: message\n      }, roomName);\n      setMessage({\n        user: username,\n        text: ''\n      });\n    }\n\n    ;\n  };\n\n  console.log(messages); // -----------------------JOIN/DISCONNECT------------------>\n\n  useEffect(() => {\n    const socket = io(ENDPOINT, {\n      transports: ['websocket'],\n      upgrade: false\n    });\n    ;\n    const {\n      name,\n      username\n    } = location;\n    setUsername(username);\n    setRoomName(name);\n    setMessages({\n      user: username\n    });\n    socket.emit('join', {\n      username,\n      roomName\n    }, () => {});\n    return () => {\n      socket.emit('disconnected', {\n        username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, location, !username, !roomName]); // -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // ----------------------------------------->\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftInnerContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"formz\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputz\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null,\n            placeholder: \"What would you like to say?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            onClick: e => {\n              sendMessage(e);\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Multiplayer, \"OY6QNRTRsY9TEbyA/WZOIKh+vTI=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","socket","Multiplayer","token","username","setUsername","roomName","setRoomName","message","setMessage","user","text","messages","setMessages","ENDPOINT","location","transports","upgrade","sendMessage","e","preventDefault","emit","console","log","name","off","on","target","value","key"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEO,QAAF,EAAYC,WAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,CAAC;AAAEW,IAAAA,IAAI,EAAC,EAAP;AAAWC,IAAAA,IAAI,EAAC;AAAhB,GAAD,CAAD,CAAxC;AACA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAC,CAAC;AAAEW,IAAAA,IAAI,EAAC,EAAP;AAAWC,IAAAA,IAAI,EAAC;AAAhB,GAAD,CAAD,CAA1C;AACA,QAAMG,QAAQ,GAAG,uBAAjB;AAEA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMI,MAAM,GAAGH,EAAE,CAACgB,QAAD,EAAW;AAACE,IAAAA,UAAU,EAAE,CAAC,WAAD,CAAb;AAA4BC,IAAAA,OAAO,EAAE;AAArC,GAAX,CAAjB;;AAEJ,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIZ,OAAJ,EAAa;AACTP,MAAAA,MAAM,CAACoB,IAAP,CAAY,aAAZ,EAA2B;AAAEX,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,IAAI,EAAEH;AAAxB,OAA3B,EAA8DF,QAA9D;AACAG,MAAAA,UAAU,CAAC;AAAEC,QAAAA,IAAI,EAAEN,QAAR;AAAkBO,QAAAA,IAAI,EAAE;AAAxB,OAAD,CAAV;AACH;;AAAA;AACJ,GAPD;;AASAW,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ,EAnBmC,CAoBnC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,MAAM,GAAGH,EAAE,CAACgB,QAAD,EAAW;AAACE,MAAAA,UAAU,EAAE,CAAC,WAAD,CAAb;AAA4BC,MAAAA,OAAO,EAAE;AAArC,KAAX,CAAjB;AACA;AACA,UAAM;AAAEO,MAAAA,IAAF;AAAQpB,MAAAA;AAAR,QAAqBW,QAA3B;AACAV,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,WAAW,CAACiB,IAAD,CAAX;AACAX,IAAAA,WAAW,CAAC;AAACH,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAX;AAEAH,IAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ,EAAoB;AAAEjB,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAApB,EAA4C,MAAM,CAEjD,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACoB,IAAP,CAAY,cAAZ,EAA4B;AAAEjB,QAAAA;AAAF,OAA5B;AACAH,MAAAA,MAAM,CAACwB,GAAP;AACH,KAHD;AAKH,GAjBQ,EAiBN,CAACX,QAAD,EAAWC,QAAX,EAAqB,CAACX,QAAtB,EAAgC,CAACE,QAAjC,CAjBM,CAAT,CArBmC,CAwCnC;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM,CAACyB,EAAP,CAAU,SAAV,EAAsBlB,OAAD,IAAa;AAC9BK,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcJ,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT,CA1CmC,CAgDnC;;AAGI,MAAI,CAACG,QAAQ,CAACS,IAAd,EAAoB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACrB,KAAL,EAAY;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACC;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCAEI;AAAA,sBACKG;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,QAAjB;AACI,YAAA,KAAK,EAAEE,OADX;AAEI,YAAA,QAAQ,EAAEW,CAAC,IAAIV,UAAU,CAACU,CAAC,CAACQ,MAAF,CAASC,KAAV,CAF7B;AAGI,YAAA,UAAU,EAAET,CAAC,IAAIA,CAAC,CAACU,GAAF,KAAU,OAAV,GAAoBX,WAAW,CAACC,CAAD,CAA/B,GAAqC,IAH1D;AAII,YAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAQ,YAAA,SAAS,EAAC,YAAlB;AACI,YAAA,OAAO,EAAGA,CAAD,IAAO;AAAED,cAAAA,WAAW,CAACC,CAAD,CAAX;AAAe,aADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CApGD;;GAAMjB,W;UAOeL,W;;;KAPfK,W;AAsGN,eAAeA,WAAf","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nlet socket;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('')\n    const [ roomName, setRoomName ] = useState('');\n    const [ message, setMessage ] = useState([{ user:'', text:'' }]);\n    const [ messages, setMessages ] = useState([{ user:'', text:'' }]);\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message) {\n        socket.emit('sendMessage', { user: username, text: message }, roomName)\n        setMessage({ user: username, text: ''})\n    };\n}\n\nconsole.log(messages);\n// -----------------------JOIN/DISCONNECT------------------>\nuseEffect(() => {\n    const socket = io(ENDPOINT, {transports: ['websocket'], upgrade: false});\n    ;\n    const { name, username } = location\n    setUsername(username);\n    setRoomName(name);\n    setMessages({user: username})\n\n    socket.emit('join', { username, roomName }, () => {\n\n    });\n\n    return () => {\n        socket.emit('disconnected', { username })\n        socket.off();\n    }\n\n}, [ENDPOINT, location, !username, !roomName]);\n\n// -------------SEND MESSAGE/ADD TO MESSAGES--------------->\n\nuseEffect(() => {\n    socket.on('message', (message) => {\n        setMessages([...messages, message]);\n    });\n}, [messages]);\n\n// ----------------------------------------->\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n            <div className='multiContainer'>\n                <div className='infoBar'>\n                    <div className='leftInnerContainer'>\n                        {/* img */}\n                        <h3>\n                            {roomName}\n                        </h3>   \n                    </div>\n                    {/* <div>\n                        { messages.map((message, i) => {\n                            <div key={i}>\n                                <h5>\n                                    {message.username}\n                                </h5>\n                                <p>\n                                    {message.message}  \n                                </p>  \n                            </div>\n                        })}\n                    </div> */}\n                    <form className='formz'>\n                        <input className='inputz'\n                            value={message}\n                            onChange={e => setMessage(e.target.value)}\n                            onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                            placeholder='What would you like to say?'\n                            >\n                        </input>\n                        <button className='sendButton'\n                            onClick={(e) => { sendMessage(e)}}\n                            >\n                            Send\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}