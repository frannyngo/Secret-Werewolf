{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = ({\n  token\n}) => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [inGame, setInGame] = useState(false);\n  const [nightPhase, setNightPhase] = useState(false);\n  const [morningPhase, setMorningPhase] = useState(false);\n  const [alive, setAlive] = useState(true);\n  const [disabled, setDisabled] = useState(false);\n  const [userKilled, setUserKilled] = useState(false);\n  const playersRemaining = 7;\n  const userKills = 0;\n\n  const Start = () => {\n    setInGame(true);\n    setMorningPhase(true);\n    setNightPhase(false);\n    setAlive(true);\n    setDisabled(false);\n    setUserKilled(false);\n  };\n\n  const Select = e => {\n    if (morningPhase === true) {\n      let userVote = parseInt(e.target.id, 10);\n      let votes = [];\n\n      while (votes.length < playersRemaining) {\n        const random = Math.floor(Math.random() * 7 + 1);\n        votes.push(random);\n      }\n\n      votes.push(userVote);\n      let highestReoccurence = 1;\n      let counter = 0;\n      let mostVotes = [];\n\n      for (let i = 0; i <= votes.length; i++) {\n        for (let j = i; j < votes.length; j++) {\n          if (votes[i] == votes[j]) {\n            counter++;\n          } else if (highestReoccurence < counter) {\n            highestReoccurence = counter;\n            mostVotes = votes[i];\n          }\n        }\n\n        counter = 0;\n      }\n\n      const hanged = document.getElementById(mostVotes);\n      console.log(hanged);\n      hanged.value = setAlive(false);\n      hanged.disabled = true;\n      highestReoccurence = 1;\n      counter = 0;\n      mostVotes = [];\n      votes = [];\n      setMorningPhase(false);\n      setNightPhase(true);\n    } else {\n      setMorningPhase(true);\n      setNightPhase(false);\n    }\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/accounts/me', {\n      token: token\n    }).then(response => {\n      setUserData(response.data);\n    });\n  }, []); // const players = [];\n  // while (players.length < 7) {\n  //     const random = Math.floor((Math.random() * 7) + 1);\n  //     if (players.indexOf(random) === -1) {\n  //         players.push(random);\n  //     }   \n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !inGame ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: Start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vote who you would like to frame as the 'werewolf'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"user\",\n        id: 1,\n        value: alive,\n        children: userData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 2,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 3,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 4,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 5,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 6,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"morning-cpu\",\n        id: 7,\n        value: alive,\n        disabled: disabled,\n        onClick: Select,\n        children: \"Morning-CPU6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Play, \"VvGNoHUNen8HSZ4ZGUIE4stkrpg=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Play.js"],"names":["useEffect","useState","axios","Play","token","userData","setUserData","inGame","setInGame","nightPhase","setNightPhase","morningPhase","setMorningPhase","alive","setAlive","disabled","setDisabled","userKilled","setUserKilled","playersRemaining","userKills","Start","Select","e","userVote","parseInt","target","id","votes","length","random","Math","floor","push","highestReoccurence","counter","mostVotes","i","j","hanged","document","getElementById","console","log","value","post","then","response","data","username"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Play = ({ token }) => {\n    const [ userData, setUserData ] = useState();\n    const [ inGame, setInGame ] = useState(false);\n    const [ nightPhase, setNightPhase ] = useState(false);\n    const [ morningPhase, setMorningPhase ] = useState(false);\n    const [ alive, setAlive ] = useState(true);\n    const [ disabled, setDisabled] = useState(false);\n    const [ userKilled, setUserKilled] = useState(false);\n\n    const playersRemaining = 7;\n    const userKills = 0;\n   \n    const Start = () => {\n        setInGame(true);\n        setMorningPhase(true);\n        setNightPhase(false); \n        setAlive(true);\n        setDisabled(false);\n        setUserKilled(false);\n    }\n\n    const Select = (e) => {\n        if ( morningPhase === true ) { \n            let userVote = parseInt(e.target.id, 10);\n            let votes = []; \n\n            while (votes.length < playersRemaining) {\n                const random = Math.floor((Math.random() * 7) + 1);\n                votes.push(random);\n            } \n            votes.push(userVote);\n            \n            let highestReoccurence = 1;\n            let counter = 0;\n            let mostVotes = [];\n\n            for (let i = 0; i <= votes.length; i++) {\n                for (let j = i; j <votes.length; j++) {\n                    if (votes[i] == votes[j]) {\n                        counter++;\n                    } else if ( highestReoccurence < counter) {\n                        highestReoccurence = counter\n                        mostVotes = votes[i];\n                    }\n                }\n                counter = 0;\n            }\n            const hanged = document.getElementById(mostVotes); \n            console.log(hanged);\n            hanged.value = setAlive(false);\n            hanged.disabled = true;\n            highestReoccurence = 1\n            counter = 0;\n            mostVotes = [];\n            votes = [];\n            setMorningPhase(false);\n            setNightPhase(true);\n        }\n        else {\n            setMorningPhase(true);\n            setNightPhase(false);\n        }\n    }\n\n    useEffect(() => {\n        axios.post('http://localhost:5000/accounts/me', {\n            token: token,\n        })\n        .then(response => {\n            setUserData(response.data);\n        });\n    }, [])\n\n    // const players = [];\n    // while (players.length < 7) {\n    //     const random = Math.floor((Math.random() * 7) + 1);\n    //     if (players.indexOf(random) === -1) {\n    //         players.push(random);\n    //     }   \n    // }\n\n    return(\n        <>\n            { !inGame?\n                <button \n                    className='start-button'\n                    onClick={Start}\n                    >\n                    Start\n                </button>\n            : \n            <>\n                <h2>\n                    Vote who you would like to frame as the 'werewolf'\n                </h2>\n                <h3 className='user'\n                    id={1}\n                    value={alive}\n                    > \n                    {userData.username}\n                </h3>\n                <button \n                    className='morning-cpu'\n                    id={2}\n                    value={alive}\n                    disabled={disabled}\n                    onClick={Select}\n                    >\n                    Morning-CPU1\n                </button>\n                <button \n                    className='morning-cpu'\n                    id={3}\n                    value={alive}\n                    disabled={disabled}\n                    onClick={Select}\n                    >\n                    Morning-CPU2\n                </button>\n                <button \n                    className='morning-cpu'\n                    id={4}\n                    value={alive}\n                    disabled={disabled}\n                    onClick={Select}\n                    >\n                    Morning-CPU3\n                </button>\n                <button \n                    className='morning-cpu'\n                    id={5}\n                    value={alive}\n                    disabled={disabled}\n                    onClick={Select}\n                    >\n                    Morning-CPU4\n                </button> \n                <button \n                    className='morning-cpu'\n                    id={6}\n                    value={alive}\n                    disabled={disabled}\n                        onClick={Select}\n                        >\n                        Morning-CPU5\n                    </button>\n                    <button \n                    className='morning-cpu'\n                    id={7}\n                    value={alive}\n                    disabled={disabled}\n                    onClick={Select}\n                    >\n                    Morning-CPU6\n                </button>\n            </>     \n            }\n            \n        \n        </>\n    );\n}\n\n\nexport default Play;"]},"metadata":{},"sourceType":"module"}