{"ast":null,"code":"var _jsxFileName = \"/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Multiplayer = ({\n  token\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000';\n  const location = useLocation();\n  const socket = io(ENDPOINT, {\n    transports: ['websocket']\n  });\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  console.log(message, messages);\n  useEffect(() => {\n    const socket = io(ENDPOINT);\n    const {\n      name,\n      room,\n      username\n    } = location;\n    setUsername(username);\n    setRoomName(name);\n    socket.emit('join', {\n      username,\n      roomName\n    }, () => {});\n    console.log(socket);\n    return () => {\n      socket.emit('disconnected', {\n        username\n      });\n      socket.off();\n    };\n  }, [ENDPOINT, !username, !roomName]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  if (!location.name) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' ? sendMessage(e) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Multiplayer, \"j9DKIQ4KKlNtpjUdKNwUC+KK6VY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Multiplayer;\nexport default Multiplayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiplayer\");","map":{"version":3,"sources":["/Users/francistan/Desktop/secretwerewolf/client/src/components/Multiplayer.js"],"names":["Redirect","useLocation","io","useState","useEffect","socket","Multiplayer","token","username","setUsername","roomName","setRoomName","message","setMessage","messages","setMessages","ENDPOINT","location","transports","sendMessage","e","preventDefault","emit","console","log","name","room","off","on","target","value","key"],"mappings":"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","sourcesContent":["import { Redirect, useLocation } from \"react-router-dom\";\nimport { io } from 'socket.io-client'\nimport { useState, useEffect } from \"react\";\n\nlet socket;\n\nconst Multiplayer = ({ token }) => {\n    const [ username, setUsername ] = useState('')\n    const [ roomName, setRoomName ] = useState('');\n    const [ message, setMessage ] = useState('');\n    const [ messages, setMessages ] = useState([]);\n    const ENDPOINT = 'http://localhost:5000';\n\n    const location = useLocation();\n    const socket = io(ENDPOINT, {transports: ['websocket']});\n\nconst sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message) {\n        socket.emit('sendMessage', message, () => {\n            setMessage('');\n        });\n    }\n}\n\nconsole.log(message, messages);\n\nuseEffect(() => {\n    const socket = io(ENDPOINT);\n    const { name, room, username } = location\n\n    setUsername(username);\n    setRoomName(name);\n\n    socket.emit('join', { username, roomName }, () => {\n\n    });\n    console.log(socket)\n\n    return () => {\n        socket.emit('disconnected', { username })\n        socket.off();\n    }\n\n}, [ENDPOINT, !username, !roomName]);\n\nuseEffect(() => {\n    socket.on('message', (message) => {\n        setMessages([...messages, message]);\n    });\n}, [messages]);\n\n\n\n    if (!location.name) {\n        return <Redirect to='/room' />\n    }\n\n    if (!token) {\n    return <Redirect to='/' />\n    }\n\n\n    return (\n        <div className='outerContainer'>\n            <div className='container'>\n                <input value={message}\n                    onChange={e => setMessage(e.target.value)}\n                    onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n                    >\n\n                </input>\n            </div>\n        </div>\n    );\n}\n\nexport default Multiplayer;"]},"metadata":{},"sourceType":"module"}